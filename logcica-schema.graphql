input OfferInsertInput {
  price: PriceInsertInput
  product: OfferProductRelationInput
  quantity: QuantityInsertInput
  updatedAt: DateTime
  _id: ObjectId
  createdAt: DateTime
  ids: [String]
  owner: ActorRefInsertInput
}

input ProductBrandUpdateInput {
  name: String
  name_unset: Boolean
}

input ProductIngredientListQuantityUpdateInput {
  percentage: Float
  percentage_inc: Float
  percentage_unset: Boolean
}

type TransactionChannelExternalTargetEnterprise {
  id: String
}

input SupplierQueryInput {
  name_nin: [String]
  _id_ne: ObjectId
  name_gte: String
  createdAt: DateTime
  OR: [SupplierQueryInput!]
  _id: ObjectId
  createdAt_lt: DateTime
  updatedAt_in: [DateTime]
  ids_exists: Boolean
  updatedAt_nin: [DateTime]
  _id_gte: ObjectId
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  _id_nin: [ObjectId]
  name_gt: String
  AND: [SupplierQueryInput!]
  owner: ActorRefQueryInput
  createdAt_nin: [DateTime]
  owner_exists: Boolean
  name: String
  createdAt_gt: DateTime
  ids_in: [String]
  ids: [String]
  updatedAt_lt: DateTime
  createdAt_exists: Boolean
  name_ne: String
  _id_lt: ObjectId
  name_exists: Boolean
  updatedAt: DateTime
  _id_gt: ObjectId
  _id_exists: Boolean
  createdAt_lte: DateTime
  createdAt_ne: DateTime
  name_lte: String
  _id_in: [ObjectId]
  updatedAt_exists: Boolean
  name_in: [String]
  updatedAt_lte: DateTime
  _id_lte: ObjectId
  updatedAt_ne: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime]
  name_lt: String
  ids_nin: [String]
}

input TourLegOriginUpdateInput {
  place_unset: Boolean
  place: ObjectId
}

input OrderLineOfferQueryInput {
  _id_lte: ObjectId
  _id_ne: ObjectId
  OR: [OrderLineOfferQueryInput!]
  _id_in: [ObjectId]
  _id_nin: [ObjectId]
  _id_gt: ObjectId
  _id_gte: ObjectId
  AND: [OrderLineOfferQueryInput!]
  _id: ObjectId
  _id_exists: Boolean
  _id_lt: ObjectId
}

input ConsolidateInputDatumSalesSession {
  owner: ConsolidateInputDatumSalesSessionOwner
  ids: [String]
  name: String
}

input TourStopTaskUpdateInput {
  shipments_unset: Boolean
  duration: TourStopTaskDurationUpdateInput
  duration_unset: Boolean
  name: String
  name_unset: Boolean
  shipments: [ObjectId]
}

type TourDraft {
  _id: ObjectId
  distance: Quantity
  duration: Quantity
  optimisation: TourDraftOptimisation
  owner: ActorRef
  shipments: [Shipment]
  stops: [TourStop]
  tour: Tour
  validation: TourDraftValidation
  vehicle: Vehicle
}

input QuantityInsertInput {
  unit: UnitRefInsertInput
  value: Float
}

input QuantityUpdateInput {
  value: Float
  value_inc: Float
  value_unset: Boolean
  unit: UnitRefUpdateInput
  unit_unset: Boolean
}

input ShippingMethodQueryInput {
  description_gt: String
  _id_ne: ObjectId
  description_lte: String
  name_exists: Boolean
  type: String
  name_gte: String
  _id_gt: ObjectId
  description: String
  ids_in: [String]
  _id_nin: [ObjectId]
  description_exists: Boolean
  _id_gte: ObjectId
  type_gt: String
  description_lt: String
  AND: [ShippingMethodQueryInput!]
  type_ne: String
  _id_lte: ObjectId
  description_in: [String]
  _id: ObjectId
  OR: [ShippingMethodQueryInput!]
  name_lte: String
  ids: [String]
  pickup: ShippingMethodPickupQueryInput
  type_exists: Boolean
  name_ne: String
  name_nin: [String]
  description_gte: String
  name_lt: String
  _id_exists: Boolean
  pickup_exists: Boolean
  ids_nin: [String]
  name: String
  owner_exists: Boolean
  type_in: [String]
  type_nin: [String]
  _id_in: [ObjectId]
  name_in: [String]
  description_ne: String
  ids_exists: Boolean
  type_lte: String
  type_gte: String
  description_nin: [String]
  owner: ActorRefQueryInput
  name_gt: String
  _id_lt: ObjectId
  type_lt: String
}

input OfferQueryInput {
  createdAt: DateTime
  price: PriceQueryInput
  _id_exists: Boolean
  OR: [OfferQueryInput!]
  updatedAt_gte: DateTime
  _id_in: [ObjectId]
  _id_gte: ObjectId
  _id_lt: ObjectId
  quantity: QuantityQueryInput
  updatedAt_lte: DateTime
  createdAt_in: [DateTime]
  ids_exists: Boolean
  owner_exists: Boolean
  product: ProductQueryInput
  product_exists: Boolean
  createdAt_lte: DateTime
  _id_gt: ObjectId
  createdAt_nin: [DateTime]
  ids_in: [String]
  _id: ObjectId
  _id_nin: [ObjectId]
  updatedAt_gt: DateTime
  _id_lte: ObjectId
  createdAt_exists: Boolean
  ids: [String]
  _id_ne: ObjectId
  updatedAt_ne: DateTime
  owner: ActorRefQueryInput
  AND: [OfferQueryInput!]
  createdAt_gte: DateTime
  price_exists: Boolean
  quantity_exists: Boolean
  createdAt_lt: DateTime
  updatedAt_in: [DateTime]
  updatedAt: DateTime
  createdAt_ne: DateTime
  ids_nin: [String]
  updatedAt_lt: DateTime
  updatedAt_exists: Boolean
  createdAt_gt: DateTime
  updatedAt_nin: [DateTime]
}

input OrderShippingMethodRelationInput {
  create: ShippingMethodInsertInput
  link: ObjectId
}

input ProductUpdateInput {
  netVolume: QuantityUpdateInput
  owner_unset: Boolean
  functionalName_unset: Boolean
  brand: ProductBrandUpdateInput
  gtin_unset: Boolean
  brand_unset: Boolean
  ingredientStatement: String
  allergenList_unset: Boolean
  createdAt: DateTime
  image: ProductImageUpdateInput
  createdAt_unset: Boolean
  publishedAt_unset: Boolean
  images: [ProductImageUpdateInput]
  marketingMessage_unset: Boolean
  sku_unset: Boolean
  weight_unset: Boolean
  consumerSafetyInformation_unset: Boolean
  netWeight: QuantityUpdateInput
  description_unset: Boolean
  grossWeight: QuantityUpdateInput
  supplierSpecifiedMinimumConsumerStorageDays_inc: Int
  image_unset: Boolean
  consumerUsageInstructions_unset: Boolean
  netVolume_unset: Boolean
  consumerStorageInstructions: String
  countryOfOrigin: ProductCountryOfOriginRelationInput
  description: String
  ids: [String]
  consumerStorageInstructions_unset: Boolean
  publishedAt: DateTime
  marketingMessage: String
  regulatedName: String
  test_unset: Boolean
  name_unset: Boolean
  regulatedName_unset: Boolean
  quantity: ProductQuantityUpdateInput
  producer: ActorRefUpdateInput
  countryOfOrigin_unset: Boolean
  _id: ObjectId
  gtin: String
  nutrientList: [ProductNutrientListUpdateInput]
  images_unset: Boolean
  ingredientList_unset: Boolean
  allergenList: [ProductAllergenListUpdateInput]
  consumerSafetyInformation: String
  grossWeight_unset: Boolean
  producer_unset: Boolean
  weight: QuantityUpdateInput
  ingredientList: [ProductIngredientListUpdateInput]
  supplierSpecifiedMinimumConsumerStorageDays: Int
  consumerUsageInstructions: String
  group_unset: Boolean
  categories: ProductCategoriesRelationInput
  functionalName: String
  categories_unset: Boolean
  supplierSpecifiedMinimumConsumerStorageDays_unset: Boolean
  name: String
  quantity_unset: Boolean
  ingredientStatement_unset: Boolean
  ids_unset: Boolean
  nutrientList_unset: Boolean
  _id_unset: Boolean
  netWeight_unset: Boolean
  test: String
  sku: String
  owner: ActorRefUpdateInput
  group: ProductGroupRelationInput
}

input ConsolidateInputDatumOrderLineOffer {
  ids: [String]
}

input ProductClassificationQueryInput {
  OR: [ProductClassificationQueryInput!]
  key: String
  key_gte: String
  key_nin: [String]
  AND: [ProductClassificationQueryInput!]
  name_lt: String
  _id: ObjectId
  _id_exists: Boolean
  _id_in: [ObjectId]
  key_gt: String
  key_lte: String
  _id_lt: ObjectId
  _id_lte: ObjectId
  _id_gte: ObjectId
  name_gt: String
  name_gte: String
  name_in: [String]
  _id_gt: ObjectId
  name_lte: String
  _id_nin: [ObjectId]
  name_ne: String
  key_in: [String]
  name_nin: [String]
  key_ne: String
  key_lt: String
  _id_ne: ObjectId
  key_exists: Boolean
  name_exists: Boolean
  name: String
}

input SalesSessionInsertInput {
  _id: ObjectId
  createdAt: DateTime
  ids: [String]
  owner: ActorRefInsertInput
  updatedAt: DateTime
}

input TransactionChannelExternalTargetPlatformUpdateInput {
  key: String
  key_unset: Boolean
}

input CodeListItemsRelationInput {
  create: [CodeInsertInput]
  link: [ObjectId]
}

input ConsolidateInputDatumWorkspace {
  taxId: String
  place: ConsolidateInputDatumWorkspacePlace
  address: ConsolidateInputDatumWorkspaceAddress
  ids: [String]
  name: String
  key: String
  link: String
  vatId: String
}

input ConsolidateInputDatumCatalog {
  ids: [String]
  owner: ConsolidateInputDatumCatalogOwner
}

input TourStopPickupQueryInput {
  shipments_in: [ObjectId]
  shipments_nin: [ObjectId]
  shipments_exists: Boolean
  AND: [TourStopPickupQueryInput!]
  OR: [TourStopPickupQueryInput!]
  shipments: [ObjectId]
}

type OrderSeller {
  name: String
  supplier: Supplier
  workspace: Workspace
}

type VehicleCostDriver {
  factor: Float
  type: String
  unit: UnitRef
}

type StorageCapacity {
  volume: Quantity
  weight: Quantity
}

input StorageCapacityInsertInput {
  volume: QuantityInsertInput
  weight: QuantityInsertInput
}

input OrderSalesSessionRelationInput {
  create: SalesSessionInsertInput
  link: ObjectId
}

input TourDraftQueryInput {
  tour_exists: Boolean
  _id_exists: Boolean
  shipments: [ShipmentQueryInput]
  shipments_exists: Boolean
  validation: TourDraftValidationQueryInput
  AND: [TourDraftQueryInput!]
  distance_exists: Boolean
  _id_lte: ObjectId
  stops_in: [TourStopQueryInput]
  _id_gte: ObjectId
  stops_nin: [TourStopQueryInput]
  _id_lt: ObjectId
  _id_gt: ObjectId
  validation_exists: Boolean
  stops: [TourStopQueryInput]
  _id_in: [ObjectId]
  duration: QuantityQueryInput
  optimisation: TourDraftOptimisationQueryInput
  distance: QuantityQueryInput
  vehicle: VehicleQueryInput
  stops_exists: Boolean
  _id: ObjectId
  owner: ActorRefQueryInput
  OR: [TourDraftQueryInput!]
  optimisation_exists: Boolean
  owner_exists: Boolean
  shipments_in: [ShipmentQueryInput]
  tour: TourQueryInput
  _id_nin: [ObjectId]
  _id_ne: ObjectId
  shipments_nin: [ShipmentQueryInput]
  vehicle_exists: Boolean
  duration_exists: Boolean
}

enum ProductGroupSortByInput {
  _ID_ASC
  _ID_DESC
  NAME_ASC
  NAME_DESC
}

input ShippingMethodPickupUpdateInput {
  points: [ShippingMethodPickupPointUpdateInput]
  points_unset: Boolean
}

input GeometryQueryInput {
  coordinates: [Float]
  type_ne: String
  coordinates_exists: Boolean
  AND: [GeometryQueryInput!]
  type_lte: String
  type_lt: String
  type_gt: String
  coordinates_nin: [Float]
  type: String
  coordinates_in: [Float]
  type_in: [String]
  OR: [GeometryQueryInput!]
  type_nin: [String]
  type_exists: Boolean
  type_gte: String
}

type WorkspaceMarketplace {
  key: String
}

type ProductQuantityUnit {
  text: String
}

input TourDraftValidationUpdateInput {
  status: String
  status_unset: Boolean
}

input ConsolidateInputDatumOrderLineItem {
  ids: [String]
}

input WorkspaceEnterpriseQueryInput {
  vatId: String
  vatId_gte: String
  name_gt: String
  ids_in: [String]
  name_ne: String
  name_lt: String
  vatId_in: [String]
  name_nin: [String]
  AND: [WorkspaceEnterpriseQueryInput!]
  ids: [String]
  name_gte: String
  name_lte: String
  ids_nin: [String]
  name_in: [String]
  vatId_lt: String
  name_exists: Boolean
  vatId_exists: Boolean
  vatId_ne: String
  OR: [WorkspaceEnterpriseQueryInput!]
  vatId_nin: [String]
  vatId_gt: String
  ids_exists: Boolean
  vatId_lte: String
  name: String
}

type TourStopGeo {
  coordinates: [Float]
  type: String
}

input ConsolidationStrategyProfileUnlessQueryInput {
  action_gte: String
  action_exists: Boolean
  AND: [ConsolidationStrategyProfileUnlessQueryInput!]
  action_in: [String]
  action: String
  action_gt: String
  action_lt: String
  action_nin: [String]
  OR: [ConsolidationStrategyProfileUnlessQueryInput!]
  action_lte: String
  action_ne: String
  filter: ConsolidationStrategyProfileUnlessFilterQueryInput
  filter_exists: Boolean
}

input ProductCategoryUpdateInput {
  children_unset: Boolean
  name: String
  hierarchyLevel: Int
  children: ProductCategoryChildrenRelationInput
  hierarchyLevel_inc: Int
  id_unset: Boolean
  classification_unset: Boolean
  id: String
  _id_unset: Boolean
  name_unset: Boolean
  _id: ObjectId
  code_unset: Boolean
  classification: ProductCategoryClassificationRelationInput
  code: String
  hierarchyLevel_unset: Boolean
  ids: [String]
  ids_unset: Boolean
}

input ProductNutrientListUpdateInput {
  dailyValueIntakePercent_inc: Float
  dailyValueIntakePercent_unset: Boolean
  nutrient: CodeRefUpdateInput
  nutrient_unset: Boolean
  quantity: QuantityUpdateInput
  quantity_unset: Boolean
  dailyValueIntakePercent: Float
}

input ConsolidateInputDatumProductCategory {
  classification: ConsolidateInputDatumProductCategoryClassification
  ids: [String]
  name: String
  code: String
}

input ConsolidateInputDatumOfferProduct {
  ids: [String]
}

type Translation {
  fr: TranslationFr
}

input GeometryUpdateInput {
  coordinates: [Float]
  coordinates_unset: Boolean
  type: String
  type_unset: Boolean
}

input ProductIngredientListQuantityInsertInput {
  percentage: Float
}

type ConsolidationStrategyRule {
  collection: String
  profileKey: String
}

type Quantity {
  unit: UnitRef
  value: Float
}

type UnitRef {
  code: String
  symbol: String
}

input ShipmentDeliveryQueryInput {
  postalCode_lt: String
  postalCode_exists: Boolean
  phone_gt: String
  postalCode_ne: String
  locality: String
  postalCode_lte: String
  phone_lte: String
  phone_ne: String
  locality_lte: String
  locality_gt: String
  phone: String
  country_in: [String]
  country_lte: String
  locality_exists: Boolean
  name: String
  country: String
  street_in: [String]
  phone_nin: [String]
  phone_lt: String
  street_exists: Boolean
  locality_ne: String
  locality_lt: String
  street: String
  country_ne: String
  country_nin: [String]
  country_gte: String
  locality_nin: [String]
  locality_gte: String
  name_exists: Boolean
  name_lt: String
  name_ne: String
  name_in: [String]
  street_lt: String
  postalCode_gte: String
  postalCode_nin: [String]
  name_gte: String
  street_nin: [String]
  phone_exists: Boolean
  locality_in: [String]
  place: PlaceQueryInput
  country_gt: String
  country_exists: Boolean
  name_nin: [String]
  place_exists: Boolean
  phone_in: [String]
  name_gt: String
  street_lte: String
  street_gte: String
  street_ne: String
  country_lt: String
  postalCode: String
  postalCode_gt: String
  name_lte: String
  phone_gte: String
  OR: [ShipmentDeliveryQueryInput!]
  AND: [ShipmentDeliveryQueryInput!]
  street_gt: String
  postalCode_in: [String]
}

input ConsolidateInputDatumOrderSellerWorkspace {
  ids: [String]
}

enum ConsolidationStrategySortByInput {
  _ID_ASC
  _ID_DESC
  KEY_ASC
  KEY_DESC
}

input VehicleCostResourceInsertInput {
  key: String
  type: String
  unit: UnitRefInsertInput
  currency: VehicleCostResourceCurrencyInsertInput
}

input OrderUpdateInput {
  _id: ObjectId
  totalPrice: PriceUpdateInput
  shippingMethod_unset: Boolean
  confirmed_unset: Boolean
  number_unset: Boolean
  seller: OrderSellerUpdateInput
  buyer_unset: Boolean
  salesSession: OrderSalesSessionRelationInput
  salesSession_unset: Boolean
  lines: [OrderLineUpdateInput]
  totalPrice_unset: Boolean
  url: String
  shippingMethod: OrderShippingMethodRelationInput
  createdAt: DateTime
  updatedAt_unset: Boolean
  seller_unset: Boolean
  _id_unset: Boolean
  createdAt_unset: Boolean
  number: String
  updatedAt: DateTime
  broker: OrderBrokerUpdateInput
  shippingAddress_unset: Boolean
  date_unset: Boolean
  lines_unset: Boolean
  shippingAddress: AddressUpdateInput
  url_unset: Boolean
  confirmed: Boolean
  buyer: OrderBuyerUpdateInput
  date: DateTime
  broker_unset: Boolean
}

input ShipmentDeliveryPlaceRelationInput {
  create: PlaceInsertInput
  link: ObjectId
}

input VehicleCostResourceUpdateInput {
  currency_unset: Boolean
  key: String
  key_unset: Boolean
  type: String
  type_unset: Boolean
  unit: UnitRefUpdateInput
  unit_unset: Boolean
  currency: VehicleCostResourceCurrencyUpdateInput
}

input SupplierUpdateInput {
  ids_unset: Boolean
  ids: [String]
  updatedAt: DateTime
  _id_unset: Boolean
  createdAt_unset: Boolean
  name: String
  name_unset: Boolean
  _id: ObjectId
  owner_unset: Boolean
  updatedAt_unset: Boolean
  owner: ActorRefUpdateInput
  createdAt: DateTime
}

input CodeQueryInput {
  sequence_gte: String
  _id_gt: ObjectId
  name_ne: String
  name_gte: String
  symbol_lt: String
  key_ne: String
  key_gte: String
  _id_in: [ObjectId]
  name_exists: Boolean
  _id: ObjectId
  symbol_in: [String]
  symbol_nin: [String]
  name_gt: String
  _id_ne: ObjectId
  _id_lte: ObjectId
  listKey_lte: String
  sequence_nin: [String]
  symbol_lte: String
  name_nin: [String]
  sequence: String
  listKey_nin: [String]
  key_gt: String
  _id_nin: [ObjectId]
  listKey_exists: Boolean
  translations_exists: Boolean
  ids_exists: Boolean
  symbol_gt: String
  name_lte: String
  listKey_lt: String
  key_nin: [String]
  sequence_exists: Boolean
  list_exists: Boolean
  ids_in: [String]
  sequence_gt: String
  key_lt: String
  _id_exists: Boolean
  translations: CodeTranslationQueryInput
  AND: [CodeQueryInput!]
  sequence_in: [String]
  listKey: String
  symbol_gte: String
  symbol: String
  sequence_lt: String
  listKey_gt: String
  key: String
  listKey_ne: String
  ids_nin: [String]
  list: CodeListQueryInput
  sequence_lte: String
  name: String
  name_in: [String]
  sequence_ne: String
  key_exists: Boolean
  ids: [String]
  OR: [CodeQueryInput!]
  key_in: [String]
  _id_lt: ObjectId
  key_lte: String
  _id_gte: ObjectId
  symbol_ne: String
  listKey_in: [String]
  name_lt: String
  listKey_gte: String
  symbol_exists: Boolean
}

input CodeTranslationDeQueryInput {
  name_lte: String
  name_nin: [String]
  name_exists: Boolean
  name: String
  name_ne: String
  name_gte: String
  OR: [CodeTranslationDeQueryInput!]
  name_lt: String
  name_gt: String
  AND: [CodeTranslationDeQueryInput!]
  name_in: [String]
}

input VehicleFeatureQueryInput {
  key_in: [String]
  name_lt: String
  key_gte: String
  key: String
  key_exists: Boolean
  name_gte: String
  key_ne: String
  key_gt: String
  key_lte: String
  name: String
  AND: [VehicleFeatureQueryInput!]
  name_lte: String
  name_in: [String]
  name_exists: Boolean
  name_gt: String
  OR: [VehicleFeatureQueryInput!]
  key_lt: String
  name_nin: [String]
  key_nin: [String]
  name_ne: String
}

enum SupplierSortByInput {
  NAME_ASC
  NAME_DESC
  UPDATEDAT_ASC
  UPDATEDAT_DESC
  _ID_ASC
  _ID_DESC
  CREATEDAT_ASC
  CREATEDAT_DESC
}

input ProductGroupInsertInput {
  _id: ObjectId
  name: String
}

input ConsolidateInputDatumCatalogItemCatalog {
  ids: [String]
}

input ConsolidationStrategyRuleInsertInput {
  collection: String
  profileKey: String
}

input ProductClassificationUpdateInput {
  key_unset: Boolean
  name: String
  name_unset: Boolean
  _id: ObjectId
  _id_unset: Boolean
  key: String
}

input ConsolidateInputDatumOrderShippingAddress {
  place: ConsolidateInputDatumOrderShippingAddressPlace
}

type InventoryItem {
  _id: ObjectId
  product: ObjectId
  quantity: Quantity
}

type CatalogItem {
  _id: ObjectId
  catalog: Catalog
  categories: [ObjectId]
  createdAt: DateTime
  ids: [String]
  inventoryItems: [InventoryItem]
  name: String
  offers: [Offer]
  owner: ActorRef
  product: Product
  sku: String
}

input CatalogItemCatalogRelationInput {
  link: ObjectId
  create: CatalogInsertInput
}

input OrderLineOfferUpdateInput {
  _id_unset: Boolean
  _id: ObjectId
}

input ConsolidateInputDatumCode {
  list: ConsolidateInputDatumCodeList
  name: String
  ids: [String]
}

input CatalogLocationsRelationInput {
  create: [LocationInsertInput]
  link: [ObjectId]
}

input ConsolidateInputDatum {
  suppliers: [ConsolidateInputDatumSupplier]
  places: [ConsolidateInputDatumPlace]
  orders: [ConsolidateInputDatumOrder]
  salesSessions: [ConsolidateInputDatumSalesSession]
  products: [ConsolidateInputDatumProduct]
  productCategories: [ConsolidateInputDatumProductCategory]
  catalogItems: [ConsolidateInputDatumCatalogItem]
  productClassifications: [ConsolidateInputDatumProductClassification]
  offers: [ConsolidateInputDatumOffer]
  workspaces: [ConsolidateInputDatumWorkspace]
  catalogs: [ConsolidateInputDatumCatalog]
  codes: [ConsolidateInputDatumCode]
  customers: [ConsolidateInputDatumCustomer]
  shippingMethods: [ConsolidateInputDatumShippingMethod]
  productGroups: [ConsolidateInputDatumProductGroup]
}

input ConsolidateInputDatumOrderChannel {
  ids: [String]
  name: String
}

input ShipmentMethodRelationInput {
  create: ShippingMethodInsertInput
  link: ObjectId
}

input ConsolidateInputDatumOrderLineProduct {
  ids: [String]
}

input TransactionChannelFilterQueryInput {
  isOrdered_ne: Boolean
  status_nin: [String]
  status_gte: String
  OR: [TransactionChannelFilterQueryInput!]
  status_lt: String
  status_in: [String]
  isOrdered: Boolean
  isOrdered_exists: Boolean
  status: String
  status_gt: String
  AND: [TransactionChannelFilterQueryInput!]
  status_exists: Boolean
  status_lte: String
  status_ne: String
}

input CustomerInsertInput {
  places: CustomerPlacesRelationInput
  updatedAt: DateTime
  _id: ObjectId
  createdAt: DateTime
  ids: [String]
  name: String
  owner: ActorRefInsertInput
}

input TourStopTaskDurationUnitUpdateInput {
  symbol: String
  symbol_unset: Boolean
}

input OrderLineItemUpdateInput {
  _id: ObjectId
  _id_unset: Boolean
}

input VehicleCompartmentFeatureQueryInput {
  key_ne: String
  name_exists: Boolean
  name: String
  key_lte: String
  name_nin: [String]
  key_gt: String
  key_gte: String
  key_lt: String
  name_gt: String
  OR: [VehicleCompartmentFeatureQueryInput!]
  key: String
  key_in: [String]
  name_lt: String
  name_lte: String
  AND: [VehicleCompartmentFeatureQueryInput!]
  name_gte: String
  name_ne: String
  name_in: [String]
  key_nin: [String]
  key_exists: Boolean
}

type VehicleModel {
  date: DateTime
  name: String
}

input CatalogItemQueryInput {
  name_gte: String
  inventoryItems: [InventoryItemQueryInput]
  ids: [String]
  name_exists: Boolean
  _id_exists: Boolean
  sku_nin: [String]
  _id_gt: ObjectId
  offers_exists: Boolean
  sku_gt: String
  createdAt_lte: DateTime
  categories_exists: Boolean
  createdAt_ne: DateTime
  _id_in: [ObjectId]
  sku_lte: String
  ids_in: [String]
  ids_exists: Boolean
  inventoryItems_exists: Boolean
  offers_nin: [OfferQueryInput]
  sku_exists: Boolean
  createdAt_gte: DateTime
  createdAt_in: [DateTime]
  _id: ObjectId
  _id_lt: ObjectId
  createdAt_gt: DateTime
  OR: [CatalogItemQueryInput!]
  product: ProductQueryInput
  _id_nin: [ObjectId]
  _id_gte: ObjectId
  AND: [CatalogItemQueryInput!]
  catalog_exists: Boolean
  inventoryItems_in: [InventoryItemQueryInput]
  createdAt_nin: [DateTime]
  sku_ne: String
  sku_lt: String
  name_lt: String
  _id_ne: ObjectId
  sku_gte: String
  categories: [ObjectId]
  name_in: [String]
  name: String
  name_gt: String
  catalog: CatalogQueryInput
  product_exists: Boolean
  sku_in: [String]
  name_lte: String
  name_ne: String
  _id_lte: ObjectId
  owner_exists: Boolean
  createdAt_lt: DateTime
  owner: ActorRefQueryInput
  createdAt_exists: Boolean
  ids_nin: [String]
  offers_in: [OfferQueryInput]
  inventoryItems_nin: [InventoryItemQueryInput]
  name_nin: [String]
  offers: [OfferQueryInput]
  sku: String
  createdAt: DateTime
  categories_nin: [ObjectId]
  categories_in: [ObjectId]
}

input ConsolidateInputDatumProductQuantityUnit {
  text: String
}

input TransactionChannelQueryInput {
  direction_nin: [String]
  direction_in: [String]
  direction_gte: String
  internalTarget: TransactionChannelInternalTargetQueryInput
  _id: ObjectId
  _id_lt: ObjectId
  externalTarget_exists: Boolean
  resource_lt: String
  role_gte: String
  resource_gt: String
  direction_lt: String
  direction_lte: String
  direction: String
  filter: TransactionChannelFilterQueryInput
  role_nin: [String]
  role_ne: String
  externalTarget: TransactionChannelExternalTargetQueryInput
  role_gt: String
  resource_nin: [String]
  resource_lte: String
  AND: [TransactionChannelQueryInput!]
  _id_gt: ObjectId
  direction_gt: String
  role_lt: String
  _id_in: [ObjectId]
  resource_ne: String
  direction_exists: Boolean
  resource_exists: Boolean
  direction_ne: String
  internalTarget_exists: Boolean
  role_in: [String]
  _id_nin: [ObjectId]
  role: String
  role_lte: String
  _id_ne: ObjectId
  _id_exists: Boolean
  resource_in: [String]
  OR: [TransactionChannelQueryInput!]
  _id_gte: ObjectId
  resource: String
  role_exists: Boolean
  filter_exists: Boolean
  resource_gte: String
  _id_lte: ObjectId
}

type Product {
  _id: ObjectId
  allergenList: [ProductAllergenList]
  brand: ProductBrand
  categories: [ProductCategory]
  consumerSafetyInformation: String
  consumerStorageInstructions: String
  consumerUsageInstructions: String
  countryOfOrigin: Code
  createdAt: DateTime
  description: String
  functionalName: String
  grossWeight: Quantity
  group: ProductGroup
  gtin: String
  ids: [String]
  image: ProductImage
  images: [ProductImage]
  ingredientList: [ProductIngredientList]
  ingredientStatement: String
  marketingMessage: String
  name: String
  netVolume: Quantity
  netWeight: Quantity
  nutrientList: [ProductNutrientList]
  owner: ActorRef
  producer: ActorRef
  publishedAt: DateTime
  quantity: ProductQuantity
  regulatedName: String
  sku: String
  supplierSpecifiedMinimumConsumerStorageDays: Int
  test: String
  weight: Quantity
}

type CodeRef {
  code: String
  key: String
  name: String
  translations: Translation
}

input ConsolidateInputDatumProductClassificationOwner {
  workspace: ConsolidateInputDatumProductClassificationOwnerWorkspace
}

input VehicleQueryInput {
  compartments_in: [VehicleCompartmentQueryInput]
  type_gte: String
  owner_exists: Boolean
  _id_lte: ObjectId
  costs_exists: Boolean
  features_exists: Boolean
  _id_gt: ObjectId
  weight_exists: Boolean
  name_nin: [String]
  brand: VehicleBrandQueryInput
  capacity_exists: Boolean
  costs_nin: [VehicleCostQueryInput]
  weight: QuantityQueryInput
  brand_exists: Boolean
  type_ne: String
  features_in: [VehicleFeatureQueryInput]
  owner: ActorRefQueryInput
  features: [VehicleFeatureQueryInput]
  type_in: [String]
  name_in: [String]
  type_gt: String
  AND: [VehicleQueryInput!]
  type: String
  _id_exists: Boolean
  type_lte: String
  compartments: [VehicleCompartmentQueryInput]
  costs_in: [VehicleCostQueryInput]
  name_gte: String
  features_nin: [VehicleFeatureQueryInput]
  _id_in: [ObjectId]
  type_lt: String
  name_gt: String
  type_nin: [String]
  costs: [VehicleCostQueryInput]
  name_ne: String
  name_lte: String
  _id_nin: [ObjectId]
  type_exists: Boolean
  _id: ObjectId
  capacity: StorageCapacityQueryInput
  OR: [VehicleQueryInput!]
  _id_lt: ObjectId
  _id_ne: ObjectId
  name: String
  model: VehicleModelQueryInput
  model_exists: Boolean
  name_lt: String
  name_exists: Boolean
  compartments_nin: [VehicleCompartmentQueryInput]
  _id_gte: ObjectId
  compartments_exists: Boolean
}

input WorkspaceCoconutInsertInput {
  slackChannel: WorkspaceCoconutSlackChannelInsertInput
}

input SupplierInsertInput {
  name: String
  owner: ActorRefInsertInput
  updatedAt: DateTime
  _id: ObjectId
  createdAt: DateTime
  ids: [String]
}

input CodeTranslationNlUpdateInput {
  name_unset: Boolean
  name: String
}

input TourStopInsertInput {
  tasks: [TourStopTaskInsertInput]
  estimatedTimeOfArrival: DateTime
  geo: TourStopGeoInsertInput
  name: String
  estimatedTimeOfDeparture: DateTime
  order: Int
  pickup: TourStopPickupInsertInput
  place: ObjectId
  actualTimeOfArrival: DateTime
  actualTimeOfDeparture: DateTime
  delivery: TourStopDeliveryInsertInput
  duration: QuantityInsertInput
}

input WorkspaceCoconutSlackChannelQueryInput {
  id_nin: [String]
  id_ne: String
  id_gt: String
  id_exists: Boolean
  id_lt: String
  id_lte: String
  AND: [WorkspaceCoconutSlackChannelQueryInput!]
  id_in: [String]
  id_gte: String
  id: String
  OR: [WorkspaceCoconutSlackChannelQueryInput!]
}

type ProductCategory {
  _id: ObjectId
  children: [ProductCategory]
  classification: ProductClassification
  code: String
  hierarchyLevel: Int
  id: String
  ids: [String]
  name: String
}

input TourDraftOptimisationQueryInput {
  status_gte: String
  status: String
  status_lt: String
  status_ne: String
  OR: [TourDraftOptimisationQueryInput!]
  status_in: [String]
  status_exists: Boolean
  status_gt: String
  AND: [TourDraftOptimisationQueryInput!]
  status_lte: String
  status_nin: [String]
}

input ShipmentOrderRelationInput {
  create: OrderInsertInput
  link: ObjectId
}

input OrderLineItemQueryInput {
  _id_ne: ObjectId
  _id_lt: ObjectId
  _id_in: [ObjectId]
  _id: ObjectId
  AND: [OrderLineItemQueryInput!]
  OR: [OrderLineItemQueryInput!]
  _id_exists: Boolean
  _id_lte: ObjectId
  _id_nin: [ObjectId]
  _id_gt: ObjectId
  _id_gte: ObjectId
}

input SalesSessionQueryInput {
  updatedAt_exists: Boolean
  _id: ObjectId
  _id_lt: ObjectId
  createdAt_exists: Boolean
  createdAt: DateTime
  AND: [SalesSessionQueryInput!]
  ids_in: [String]
  updatedAt_nin: [DateTime]
  _id_gt: ObjectId
  _id_gte: ObjectId
  createdAt_lte: DateTime
  ids: [String]
  createdAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_ne: DateTime
  createdAt_lt: DateTime
  ids_exists: Boolean
  owner_exists: Boolean
  _id_nin: [ObjectId]
  createdAt_in: [DateTime]
  _id_exists: Boolean
  _id_ne: ObjectId
  createdAt_ne: DateTime
  updatedAt: DateTime
  updatedAt_lt: DateTime
  OR: [SalesSessionQueryInput!]
  owner: ActorRefQueryInput
  ids_nin: [String]
  updatedAt_lte: DateTime
  updatedAt_in: [DateTime]
  updatedAt_gt: DateTime
  _id_in: [ObjectId]
  createdAt_gte: DateTime
  _id_lte: ObjectId
  createdAt_nin: [DateTime]
}

enum InventoryItemSortByInput {
  _ID_ASC
  _ID_DESC
  PRODUCT_ASC
  PRODUCT_DESC
}

input ProductBrandInsertInput {
  name: String
}

type Query {
  area(query: AreaQueryInput): Area
  areas(
    query: AreaQueryInput
    limit: Int = 100
    sortBy: AreaSortByInput
  ): [Area]!
  catalog(query: CatalogQueryInput): Catalog
  catalogItem(query: CatalogItemQueryInput): CatalogItem
  catalogItems(
    query: CatalogItemQueryInput
    limit: Int = 100
    sortBy: CatalogItemSortByInput
  ): [CatalogItem]!
  catalogs(
    query: CatalogQueryInput
    limit: Int = 100
    sortBy: CatalogSortByInput
  ): [Catalog]!
  code(query: CodeQueryInput): Code
  codeList(query: CodeListQueryInput): CodeList
  codeLists(
    query: CodeListQueryInput
    limit: Int = 100
    sortBy: CodeListSortByInput
  ): [CodeList]!
  codes(
    limit: Int = 100
    sortBy: CodeSortByInput
    query: CodeQueryInput
  ): [Code]!
  consolidationStrategies(
    query: ConsolidationStrategyQueryInput
    limit: Int = 100
    sortBy: ConsolidationStrategySortByInput
  ): [ConsolidationStrategy]!
  consolidationStrategy(
    query: ConsolidationStrategyQueryInput
  ): ConsolidationStrategy
  customer(query: CustomerQueryInput): Customer
  customers(
    query: CustomerQueryInput
    limit: Int = 100
    sortBy: CustomerSortByInput
  ): [Customer]!
  inventoryItem(query: InventoryItemQueryInput): InventoryItem
  inventoryItems(
    query: InventoryItemQueryInput
    limit: Int = 100
    sortBy: InventoryItemSortByInput
  ): [InventoryItem]!
  location(query: LocationQueryInput): Location
  locations(
    query: LocationQueryInput
    limit: Int = 100
    sortBy: LocationSortByInput
  ): [Location]!
  offer(query: OfferQueryInput): Offer
  offers(
    query: OfferQueryInput
    limit: Int = 100
    sortBy: OfferSortByInput
  ): [Offer]!
  order(query: OrderQueryInput): Order
  orders(
    query: OrderQueryInput
    limit: Int = 100
    sortBy: OrderSortByInput
  ): [Order]!
  place(query: PlaceQueryInput): Place
  places(
    query: PlaceQueryInput
    limit: Int = 100
    sortBy: PlaceSortByInput
  ): [Place]!
  product(query: ProductQueryInput): Product
  productCategories(
    query: ProductCategoryQueryInput
    limit: Int = 100
    sortBy: ProductCategorySortByInput
  ): [ProductCategory]!
  productCategory(query: ProductCategoryQueryInput): ProductCategory
  productClassification(
    query: ProductClassificationQueryInput
  ): ProductClassification
  productClassifications(
    limit: Int = 100
    sortBy: ProductClassificationSortByInput
    query: ProductClassificationQueryInput
  ): [ProductClassification]!
  productGroup(query: ProductGroupQueryInput): ProductGroup
  productGroups(
    limit: Int = 100
    sortBy: ProductGroupSortByInput
    query: ProductGroupQueryInput
  ): [ProductGroup]!
  products(
    query: ProductQueryInput
    limit: Int = 100
    sortBy: ProductSortByInput
  ): [Product]!
  salesSession(query: SalesSessionQueryInput): SalesSession
  salesSessions(
    query: SalesSessionQueryInput
    limit: Int = 100
    sortBy: SalesSessionSortByInput
  ): [SalesSession]!
  shipment(query: ShipmentQueryInput): Shipment
  shipments(
    query: ShipmentQueryInput
    limit: Int = 100
    sortBy: ShipmentSortByInput
  ): [Shipment]!
  shippingMethod(query: ShippingMethodQueryInput): ShippingMethod
  shippingMethods(
    sortBy: ShippingMethodSortByInput
    query: ShippingMethodQueryInput
    limit: Int = 100
  ): [ShippingMethod]!
  supplier(query: SupplierQueryInput): Supplier
  suppliers(
    query: SupplierQueryInput
    limit: Int = 100
    sortBy: SupplierSortByInput
  ): [Supplier]!
  tour(query: TourQueryInput): Tour
  tourDraft(query: TourDraftQueryInput): TourDraft
  tourDrafts(
    query: TourDraftQueryInput
    limit: Int = 100
    sortBy: TourDraftSortByInput
  ): [TourDraft]!
  tours(
    query: TourQueryInput
    limit: Int = 100
    sortBy: TourSortByInput
  ): [Tour]!
  transactionChannel(query: TransactionChannelQueryInput): TransactionChannel
  transactionChannels(
    query: TransactionChannelQueryInput
    limit: Int = 100
    sortBy: TransactionChannelSortByInput
  ): [TransactionChannel]!
  vehicle(query: VehicleQueryInput): Vehicle
  vehicles(
    limit: Int = 100
    sortBy: VehicleSortByInput
    query: VehicleQueryInput
  ): [Vehicle]!
  workspace(query: WorkspaceQueryInput): Workspace
  workspaces(
    query: WorkspaceQueryInput
    limit: Int = 100
    sortBy: WorkspaceSortByInput
  ): [Workspace]!
}

input ProductNutrientListQueryInput {
  nutrient_exists: Boolean
  dailyValueIntakePercent_in: [Float]
  dailyValueIntakePercent_ne: Float
  quantity_exists: Boolean
  dailyValueIntakePercent_nin: [Float]
  dailyValueIntakePercent_gt: Float
  AND: [ProductNutrientListQueryInput!]
  nutrient: CodeRefQueryInput
  dailyValueIntakePercent: Float
  dailyValueIntakePercent_exists: Boolean
  dailyValueIntakePercent_gte: Float
  dailyValueIntakePercent_lt: Float
  quantity: QuantityQueryInput
  OR: [ProductNutrientListQueryInput!]
  dailyValueIntakePercent_lte: Float
}

input ProductAllergenListQueryInput {
  levelOfContainment: CodeRefQueryInput
  levelOfContainment_exists: Boolean
  AND: [ProductAllergenListQueryInput!]
  OR: [ProductAllergenListQueryInput!]
  allergen: CodeRefQueryInput
  allergen_exists: Boolean
}

input CodeUpdateInput {
  symbol_unset: Boolean
  sequence_unset: Boolean
  ids_unset: Boolean
  translations: CodeTranslationUpdateInput
  translations_unset: Boolean
  symbol: String
  name: String
  key: String
  list: CodeListRelationInput
  list_unset: Boolean
  _id_unset: Boolean
  listKey: String
  name_unset: Boolean
  ids: [String]
  sequence: String
  _id: ObjectId
  key_unset: Boolean
  listKey_unset: Boolean
}

input LocationPlaceRelationInput {
  create: PlaceInsertInput
  link: ObjectId
}

input TourLegDestinationInsertInput {
  place: ObjectId
}

input ProductIngredientListQueryInput {
  sequence_gt: String
  AND: [ProductIngredientListQueryInput!]
  quantity_exists: Boolean
  sequence_ne: String
  sequence_in: [String]
  sequence_lte: String
  ingredient_exists: Boolean
  sequence_lt: String
  quantity: ProductIngredientListQuantityQueryInput
  ingredient: ProductIngredientListIngredientQueryInput
  sequence: String
  sequence_exists: Boolean
  sequence_nin: [String]
  sequence_gte: String
  OR: [ProductIngredientListQueryInput!]
}

type CodeTranslation {
  de: CodeTranslationDe
  en: CodeTranslationEn
  fr: CodeTranslationFr
  nl: CodeTranslationNl
}

type ShippingMethodPickupPoint {
  place: ObjectId
}

input AddressInsertInput {
  phone: String
  place: ObjectId
  postalCode: String
  street: String
  country: String
  geo: GeometryInsertInput
  locality: String
  name: String
}

input CustomerUpdateInput {
  places_unset: Boolean
  createdAt_unset: Boolean
  name_unset: Boolean
  name: String
  owner_unset: Boolean
  updatedAt: DateTime
  ids: [String]
  owner: ActorRefUpdateInput
  _id: ObjectId
  _id_unset: Boolean
  updatedAt_unset: Boolean
  places: CustomerPlacesRelationInput
  ids_unset: Boolean
  createdAt: DateTime
}

input ShippingMethodUpdateInput {
  type_unset: Boolean
  description: String
  pickup_unset: Boolean
  _id: ObjectId
  ids: [String]
  _id_unset: Boolean
  name: String
  owner_unset: Boolean
  type: String
  ids_unset: Boolean
  description_unset: Boolean
  name_unset: Boolean
  owner: ActorRefUpdateInput
  pickup: ShippingMethodPickupUpdateInput
}

input InventoryItemInsertInput {
  _id: ObjectId
  product: ObjectId
  quantity: QuantityInsertInput
}

input ConsolidateInputDatumCatalogItemProduct {
  ids: [String]
}

type TransactionChannelExternalTargetMarketplace {
  key: String
}

input ProductQuantityQueryInput {
  value: Float
  value_in: [Float]
  value_gt: Float
  AND: [ProductQuantityQueryInput!]
  unit: ProductQuantityUnitQueryInput
  value_gte: Float
  OR: [ProductQuantityQueryInput!]
  unit_exists: Boolean
  value_lt: Float
  value_exists: Boolean
  value_lte: Float
  value_ne: Float
  value_nin: [Float]
}

type VehicleCompartment {
  capacity: StorageCapacity
  features: [VehicleCompartmentFeature]
  name: String
}

input GeometryInsertInput {
  type: String
  coordinates: [Float]
}

type InsertManyPayload {
  insertedIds: [ObjectId]!
}

input TourShipmentsRelationInput {
  create: [ShipmentInsertInput]
  link: [ObjectId]
}

input ConsolidateInputDatumProductCategoryClassification {
  ids: [String]
}

input ConsolidateInputDatumOfferOwnerWorkspace {
  ids: [String]
}

type ProductIngredientListQuantity {
  percentage: Float
}

input ShippingMethodPickupPointQueryInput {
  place_gt: ObjectId
  place_lte: ObjectId
  place_ne: ObjectId
  place_in: [ObjectId]
  place_nin: [ObjectId]
  place_exists: Boolean
  place_gte: ObjectId
  OR: [ShippingMethodPickupPointQueryInput!]
  place: ObjectId
  place_lt: ObjectId
  AND: [ShippingMethodPickupPointQueryInput!]
}

enum ShipmentSortByInput {
  _ID_DESC
  CREATEDAT_ASC
  CREATEDAT_DESC
  DATE_DESC
  KEY_ASC
  KEY_DESC
  METHOD_DESC
  ORDER_ASC
  ORDER_DESC
  _ID_ASC
  DATE_ASC
  METHOD_ASC
}

input ConsolidateInputDatumOrderLineQuantity {
  value: Float
}

input ShipmentPickupUpdateInput {
  place: ShipmentPickupPlaceRelationInput
  place_unset: Boolean
}

input CodeTranslationNlQueryInput {
  name_lte: String
  name_ne: String
  name_gt: String
  OR: [CodeTranslationNlQueryInput!]
  name: String
  name_in: [String]
  name_nin: [String]
  AND: [CodeTranslationNlQueryInput!]
  name_lt: String
  name_gte: String
  name_exists: Boolean
}

input OrderLineQueryInput {
  name_gt: String
  sku: String
  name_in: [String]
  price_exists: Boolean
  sku_ne: String
  product_exists: Boolean
  offer_exists: Boolean
  product1_lt: ObjectId
  OR: [OrderLineQueryInput!]
  product1_lte: ObjectId
  name_ne: String
  product1_in: [ObjectId]
  gtin: String
  product1: ObjectId
  product1_gt: ObjectId
  sku_exists: Boolean
  product1_exists: Boolean
  product1_ne: ObjectId
  product1_gte: ObjectId
  quantity: QuantityQueryInput
  gtin_nin: [String]
  product: OrderLineProductQueryInput
  item: OrderLineItemQueryInput
  name_lt: String
  gtin_lte: String
  name_gte: String
  product1_nin: [ObjectId]
  sku_in: [String]
  name_nin: [String]
  name_exists: Boolean
  sku_nin: [String]
  gtin_gt: String
  gtin_gte: String
  gtin_ne: String
  quantity_exists: Boolean
  AND: [OrderLineQueryInput!]
  price: PriceQueryInput
  offer: OrderLineOfferQueryInput
  item_exists: Boolean
  gtin_in: [String]
  name: String
  sku_gte: String
  sku_lte: String
  sku_lt: String
  sku_gt: String
  name_lte: String
  gtin_lt: String
  gtin_exists: Boolean
}

input ConsolidationStrategyRuleUpdateInput {
  profileKey: String
  profileKey_unset: Boolean
  collection: String
  collection_unset: Boolean
}

input TourLegQueryInput {
  OR: [TourLegQueryInput!]
  duration_exists: Boolean
  origin: TourLegOriginQueryInput
  payload: TourLegPayloadQueryInput
  destination: TourLegDestinationQueryInput
  destination_exists: Boolean
  AND: [TourLegQueryInput!]
  distance: QuantityQueryInput
  distance_exists: Boolean
  duration: QuantityQueryInput
  origin_exists: Boolean
  payload_exists: Boolean
}

input ProductCountryOfOriginRelationInput {
  create: CodeInsertInput
  link: ObjectId
}

input VehicleUpdateInput {
  features: [VehicleFeatureUpdateInput]
  owner: ActorRefUpdateInput
  brand_unset: Boolean
  costs_unset: Boolean
  name_unset: Boolean
  model: VehicleModelUpdateInput
  model_unset: Boolean
  capacity_unset: Boolean
  _id: ObjectId
  features_unset: Boolean
  brand: VehicleBrandUpdateInput
  weight: QuantityUpdateInput
  compartments: [VehicleCompartmentUpdateInput]
  _id_unset: Boolean
  capacity: StorageCapacityUpdateInput
  costs: [VehicleCostUpdateInput]
  name: String
  owner_unset: Boolean
  type: String
  type_unset: Boolean
  compartments_unset: Boolean
  weight_unset: Boolean
}

type OrderLine {
  gtin: String
  item: OrderLineItem
  name: String
  offer: OrderLineOffer
  price: Price
  product: OrderLineProduct
  product1: ObjectId
  quantity: Quantity
  sku: String
}

input ConsolidateInputDatumProductClassification {
  name: String
  owner: ConsolidateInputDatumProductClassificationOwner
  ids: [String]
}

input ConsolidateInputDatumProductImage {
  url: String
}

input VehicleModelUpdateInput {
  name: String
  name_unset: Boolean
  date: DateTime
  date_unset: Boolean
}

input StorageCapacityUpdateInput {
  weight: QuantityUpdateInput
  weight_unset: Boolean
  volume: QuantityUpdateInput
  volume_unset: Boolean
}

type CodeList {
  _id: ObjectId
  ids: [String]
  items: [Code]
  key: String
  name: String
}

input TourQueryInput {
  shipments_exists: Boolean
  owner: ActorRefQueryInput
  legs_exists: Boolean
  date_gt: DateTime
  stops_nin: [TourStopQueryInput]
  _id_lt: ObjectId
  date_gte: DateTime
  name_ne: String
  date_nin: [DateTime]
  _id_exists: Boolean
  AND: [TourQueryInput!]
  _id_nin: [ObjectId]
  shipments_nin: [ShipmentQueryInput]
  name_gte: String
  date_exists: Boolean
  vehicle_exists: Boolean
  _id_in: [ObjectId]
  owner_exists: Boolean
  date_lt: DateTime
  distance_exists: Boolean
  shipments: [ShipmentQueryInput]
  stops_in: [TourStopQueryInput]
  stops_exists: Boolean
  createdAt_lte: DateTime
  createdAt_in: [DateTime]
  createdAt_gt: DateTime
  date_lte: DateTime
  _id_gt: ObjectId
  date: DateTime
  name_gt: String
  createdAt_exists: Boolean
  distance: QuantityQueryInput
  legs_nin: [TourLegQueryInput]
  name_exists: Boolean
  _id_ne: ObjectId
  vehicle: VehicleQueryInput
  _id: ObjectId
  createdAt_nin: [DateTime]
  createdAt_ne: DateTime
  date_ne: DateTime
  legs_in: [TourLegQueryInput]
  date_in: [DateTime]
  name_in: [String]
  _id_lte: ObjectId
  legs: [TourLegQueryInput]
  name: String
  createdAt_lt: DateTime
  stops: [TourStopQueryInput]
  duration_exists: Boolean
  createdAt_gte: DateTime
  OR: [TourQueryInput!]
  shipments_in: [ShipmentQueryInput]
  _id_gte: ObjectId
  duration: QuantityQueryInput
  name_lt: String
  createdAt: DateTime
  name_lte: String
  name_nin: [String]
}

input PlaceUpdateInput {
  center: GeometryUpdateInput
  owner_unset: Boolean
  types: [String]
  ids_unset: Boolean
  name: String
  address: AddressUpdateInput
  code_unset: Boolean
  name_unset: Boolean
  withinAreas: [ObjectId]
  owner: ActorRefUpdateInput
  geo: GeometryUpdateInput
  withinAreas_unset: Boolean
  _id_unset: Boolean
  geo_unset: Boolean
  code: String
  ids: [String]
  address_unset: Boolean
  types_unset: Boolean
  gln: String
  _id: ObjectId
  gln_unset: Boolean
  center_unset: Boolean
}

type Supplier {
  _id: ObjectId
  createdAt: DateTime
  ids: [String]
  name: String
  owner: ActorRef
  updatedAt: DateTime
}

type ConsolidationStrategyProfileUnless {
  action: String
  filter: ConsolidationStrategyProfileUnlessFilter
}

enum ProductCategorySortByInput {
  _ID_ASC
  CLASSIFICATION_DESC
  ID_ASC
  ID_DESC
  CODE_ASC
  NAME_DESC
  _ID_DESC
  CLASSIFICATION_ASC
  HIERARCHYLEVEL_ASC
  HIERARCHYLEVEL_DESC
  CODE_DESC
  NAME_ASC
}

type Address {
  country: String
  geo: Geometry
  locality: String
  name: String
  phone: String
  place: ObjectId
  postalCode: String
  street: String
}

type WorkspaceCoconutSlackChannel {
  id: String
}

type ProductNutrientList {
  dailyValueIntakePercent: Float
  nutrient: CodeRef
  quantity: Quantity
}

input ProductQuantityInsertInput {
  unit: ProductQuantityUnitInsertInput
  value: Float
}

input ConsolidateInputDatumCatalogItem {
  catalog: ConsolidateInputDatumCatalogItemCatalog
  ids: [String]
  name: String
  product: ConsolidateInputDatumCatalogItemProduct
  offers: [ConsolidateInputDatumCatalogItemOffer]
}

input ConsolidateInputDatumSupplierOwnerWorkspace {
  ids: [String]
}

input TourLegPayloadQueryInput {
  shipments_nin: [ObjectId]
  weight: QuantityQueryInput
  weight_exists: Boolean
  AND: [TourLegPayloadQueryInput!]
  volume_exists: Boolean
  OR: [TourLegPayloadQueryInput!]
  shipments: [ObjectId]
  shipments_in: [ObjectId]
  volume: QuantityQueryInput
  shipments_exists: Boolean
}

type Catalog {
  _id: ObjectId
  enterprise: ObjectId
  locations: [Location]
  owner: ActorRef
}

input OrderSellerSupplierRelationInput {
  create: SupplierInsertInput
  link: ObjectId
}

input OrderLineUpdateInput {
  product_unset: Boolean
  gtin_unset: Boolean
  name_unset: Boolean
  item: OrderLineItemUpdateInput
  name: String
  gtin: String
  sku: String
  price_unset: Boolean
  offer: OrderLineOfferUpdateInput
  product1: ObjectId
  price: PriceUpdateInput
  offer_unset: Boolean
  quantity: QuantityUpdateInput
  product: OrderLineProductUpdateInput
  sku_unset: Boolean
  quantity_unset: Boolean
  product1_unset: Boolean
  item_unset: Boolean
}

input OrderSellerQueryInput {
  name: String
  AND: [OrderSellerQueryInput!]
  name_lt: String
  workspace: WorkspaceQueryInput
  name_in: [String]
  name_gte: String
  supplier: SupplierQueryInput
  name_gt: String
  supplier_exists: Boolean
  OR: [OrderSellerQueryInput!]
  name_nin: [String]
  name_exists: Boolean
  name_ne: String
  workspace_exists: Boolean
  name_lte: String
}

input CodeTranslationEnUpdateInput {
  name: String
  name_unset: Boolean
}

input PriceUpdateInput {
  currency: CurrencyRefUpdateInput
  currency_unset: Boolean
  value: Float
  value_inc: Float
  value_unset: Boolean
}

input TourLegUpdateInput {
  duration_unset: Boolean
  destination: TourLegDestinationUpdateInput
  payload: TourLegPayloadUpdateInput
  payload_unset: Boolean
  distance: QuantityUpdateInput
  distance_unset: Boolean
  duration: QuantityUpdateInput
  origin_unset: Boolean
  destination_unset: Boolean
  origin: TourLegOriginUpdateInput
}

input ConsolidateInputDatumWorkspacePlace {
  ids: [String]
}

input ShipmentPickupQueryInput {
  place_exists: Boolean
  AND: [ShipmentPickupQueryInput!]
  OR: [ShipmentPickupQueryInput!]
  place: PlaceQueryInput
}

type Price {
  currency: CurrencyRef
  value: Float
}

input ShippingMethodPickupPointInsertInput {
  place: ObjectId
}

input ShipmentPickupInsertInput {
  place: ShipmentPickupPlaceRelationInput
}

input ProductQueryInput {
  description_nin: [String]
  createdAt_gt: DateTime
  consumerStorageInstructions_exists: Boolean
  consumerSafetyInformation_lt: String
  name_ne: String
  name_lt: String
  AND: [ProductQueryInput!]
  categories_exists: Boolean
  consumerSafetyInformation_lte: String
  supplierSpecifiedMinimumConsumerStorageDays_gt: Int
  brand_exists: Boolean
  consumerSafetyInformation_gt: String
  description_exists: Boolean
  owner: ActorRefQueryInput
  gtin_in: [String]
  consumerSafetyInformation_ne: String
  test: String
  marketingMessage_ne: String
  sku_lte: String
  test_nin: [String]
  images_exists: Boolean
  consumerUsageInstructions_nin: [String]
  consumerStorageInstructions_lt: String
  _id_lt: ObjectId
  createdAt_lt: DateTime
  name_gte: String
  group_exists: Boolean
  functionalName_ne: String
  publishedAt_gt: DateTime
  supplierSpecifiedMinimumConsumerStorageDays_in: [Int]
  ingredientStatement_ne: String
  ingredientStatement_in: [String]
  netWeight: QuantityQueryInput
  weight_exists: Boolean
  producer_exists: Boolean
  consumerStorageInstructions_nin: [String]
  netVolume: QuantityQueryInput
  description_gt: String
  createdAt_exists: Boolean
  consumerSafetyInformation_gte: String
  consumerStorageInstructions_ne: String
  test_exists: Boolean
  supplierSpecifiedMinimumConsumerStorageDays_gte: Int
  functionalName_in: [String]
  consumerUsageInstructions_lte: String
  _id_exists: Boolean
  createdAt_nin: [DateTime]
  ids: [String]
  gtin_gt: String
  supplierSpecifiedMinimumConsumerStorageDays_ne: Int
  test_in: [String]
  netWeight_exists: Boolean
  supplierSpecifiedMinimumConsumerStorageDays_lte: Int
  consumerSafetyInformation_exists: Boolean
  createdAt: DateTime
  publishedAt_lte: DateTime
  gtin_lt: String
  test_gt: String
  createdAt_in: [DateTime]
  group: ProductGroupQueryInput
  sku_gt: String
  description_lte: String
  nutrientList_in: [ProductNutrientListQueryInput]
  allergenList_nin: [ProductAllergenListQueryInput]
  ingredientList_nin: [ProductIngredientListQueryInput]
  publishedAt: DateTime
  _id_gt: ObjectId
  regulatedName_nin: [String]
  consumerSafetyInformation_in: [String]
  marketingMessage: String
  sku_nin: [String]
  brand: ProductBrandQueryInput
  countryOfOrigin_exists: Boolean
  consumerUsageInstructions_gte: String
  regulatedName_lt: String
  functionalName_nin: [String]
  supplierSpecifiedMinimumConsumerStorageDays_exists: Boolean
  ingredientStatement_lte: String
  owner_exists: Boolean
  quantity_exists: Boolean
  description_ne: String
  sku: String
  marketingMessage_exists: Boolean
  test_lte: String
  regulatedName_gte: String
  description_in: [String]
  publishedAt_in: [DateTime]
  consumerStorageInstructions_in: [String]
  gtin_ne: String
  weight: QuantityQueryInput
  countryOfOrigin: CodeQueryInput
  _id_in: [ObjectId]
  nutrientList: [ProductNutrientListQueryInput]
  functionalName_lte: String
  _id_gte: ObjectId
  regulatedName_in: [String]
  ingredientStatement: String
  ingredientStatement_gt: String
  images: [ProductImageQueryInput]
  sku_in: [String]
  categories: [ProductCategoryQueryInput]
  regulatedName_exists: Boolean
  regulatedName_gt: String
  description: String
  consumerStorageInstructions_gte: String
  gtin_exists: Boolean
  publishedAt_lt: DateTime
  functionalName_lt: String
  netVolume_exists: Boolean
  supplierSpecifiedMinimumConsumerStorageDays_lt: Int
  images_in: [ProductImageQueryInput]
  consumerUsageInstructions_ne: String
  _id_ne: ObjectId
  _id_nin: [ObjectId]
  consumerSafetyInformation: String
  functionalName_gt: String
  marketingMessage_gte: String
  functionalName: String
  images_nin: [ProductImageQueryInput]
  publishedAt_gte: DateTime
  regulatedName: String
  consumerStorageInstructions: String
  ingredientStatement_nin: [String]
  consumerStorageInstructions_lte: String
  test_ne: String
  producer: ActorRefQueryInput
  ingredientStatement_exists: Boolean
  supplierSpecifiedMinimumConsumerStorageDays: Int
  marketingMessage_in: [String]
  sku_exists: Boolean
  ids_in: [String]
  grossWeight: QuantityQueryInput
  publishedAt_ne: DateTime
  name_lte: String
  createdAt_gte: DateTime
  consumerUsageInstructions: String
  ingredientStatement_lt: String
  regulatedName_ne: String
  sku_gte: String
  name_gt: String
  sku_lt: String
  allergenList_in: [ProductAllergenListQueryInput]
  description_gte: String
  consumerUsageInstructions_gt: String
  quantity: ProductQuantityQueryInput
  consumerUsageInstructions_in: [String]
  grossWeight_exists: Boolean
  consumerSafetyInformation_nin: [String]
  sku_ne: String
  marketingMessage_lt: String
  ids_exists: Boolean
  consumerUsageInstructions_lt: String
  _id_lte: ObjectId
  regulatedName_lte: String
  publishedAt_nin: [DateTime]
  consumerUsageInstructions_exists: Boolean
  nutrientList_exists: Boolean
  marketingMessage_lte: String
  ids_nin: [String]
  _id: ObjectId
  gtin_gte: String
  marketingMessage_nin: [String]
  image: ProductImageQueryInput
  image_exists: Boolean
  functionalName_exists: Boolean
  allergenList_exists: Boolean
  name_exists: Boolean
  functionalName_gte: String
  supplierSpecifiedMinimumConsumerStorageDays_nin: [Int]
  OR: [ProductQueryInput!]
  marketingMessage_gt: String
  ingredientStatement_gte: String
  ingredientList_in: [ProductIngredientListQueryInput]
  name_nin: [String]
  createdAt_ne: DateTime
  nutrientList_nin: [ProductNutrientListQueryInput]
  ingredientList_exists: Boolean
  name: String
  gtin: String
  consumerStorageInstructions_gt: String
  test_lt: String
  test_gte: String
  ingredientList: [ProductIngredientListQueryInput]
  gtin_lte: String
  createdAt_lte: DateTime
  publishedAt_exists: Boolean
  gtin_nin: [String]
  categories_nin: [ProductCategoryQueryInput]
  name_in: [String]
  allergenList: [ProductAllergenListQueryInput]
  description_lt: String
  categories_in: [ProductCategoryQueryInput]
}

enum AreaSortByInput {
  _ID_DESC
  CODE_ASC
  CODE_DESC
  NAME_ASC
  NAME_DESC
  _ID_ASC
}

input ProductGroupRelationInput {
  create: ProductGroupInsertInput
  link: ObjectId
}

input ConsolidateInputDatumProduct {
  supplierSpecifiedMinimumConsumerStorageDays: Int
  group: ConsolidateInputDatumProductGroup
  regulatedName: String
  consumerStorageInstructions: String
  description: String
  netWeight: ConsolidateInputDatumProductNetWeight
  functionalName: String
  ingredientStatement: String
  gtin: String
  image: ConsolidateInputDatumProductImage
  ids: [String]
  name: String
  grossWeight: ConsolidateInputDatumProductGrossWeight
  consumerUsageInstructions: String
  createdAt: DateTime
  producer: ConsolidateInputDatumProductProducer
  categories: [ConsolidateInputDatumProductCategory]
  marketingMessage: String
  netVolume: ConsolidateInputDatumProductNetVolume
  quantity: ConsolidateInputDatumProductQuantity
  publishedAt: DateTime
  ingredientList: [ConsolidateInputDatumProductIngredientList]
  consumerSafetyInformation: String
}

input VehicleCompartmentFeatureUpdateInput {
  key_unset: Boolean
  name: String
  name_unset: Boolean
  key: String
}

input OrderLineItemInsertInput {
  _id: ObjectId
}

input TourLegPayloadUpdateInput {
  weight_unset: Boolean
  shipments: [ObjectId]
  shipments_unset: Boolean
  volume: QuantityUpdateInput
  volume_unset: Boolean
  weight: QuantityUpdateInput
}

input ConsolidateInputDatumOrderBuyer {
  workspace: ConsolidateInputDatumOrderBuyerWorkspace
  customer: ConsolidateInputDatumOrderBuyerCustomer
}

input QuantityQueryInput {
  value_lte: Float
  AND: [QuantityQueryInput!]
  unit: UnitRefQueryInput
  value_exists: Boolean
  OR: [QuantityQueryInput!]
  unit_exists: Boolean
  value: Float
  value_ne: Float
  value_gt: Float
  value_gte: Float
  value_nin: [Float]
  value_lt: Float
  value_in: [Float]
}

input CodeTranslationEnInsertInput {
  name: String
}

input ShipmentLineInsertInput {
  name: String
  product: ObjectId
  quantity: QuantityInsertInput
  weight: QuantityInsertInput
}

input TransactionChannelInsertInput {
  _id: ObjectId
  direction: String
  externalTarget: TransactionChannelExternalTargetInsertInput
  filter: TransactionChannelFilterInsertInput
  internalTarget: TransactionChannelInternalTargetInsertInput
  resource: String
  role: String
}

input VehicleCostResourceCurrencyUpdateInput {
  symbol: String
  symbol_unset: Boolean
}

scalar ObjectId

input UnitRefQueryInput {
  symbol_lt: String
  code_gte: String
  AND: [UnitRefQueryInput!]
  symbol_gt: String
  code_lte: String
  code_nin: [String]
  code: String
  code_exists: Boolean
  code_lt: String
  symbol_exists: Boolean
  symbol_gte: String
  code_ne: String
  code_gt: String
  symbol_nin: [String]
  symbol_lte: String
  symbol: String
  OR: [UnitRefQueryInput!]
  symbol_ne: String
  symbol_in: [String]
  code_in: [String]
}

input CodeTranslationInsertInput {
  fr: CodeTranslationFrInsertInput
  nl: CodeTranslationNlInsertInput
  de: CodeTranslationDeInsertInput
  en: CodeTranslationEnInsertInput
}

input ConsolidateInputDatumProductNetVolumeUnit {
  code: String
}

input ShipmentLineQueryInput {
  product_nin: [ObjectId]
  product_gt: ObjectId
  name_gt: String
  name_lt: String
  product_lte: ObjectId
  AND: [ShipmentLineQueryInput!]
  name_ne: String
  weight: QuantityQueryInput
  name_lte: String
  name_in: [String]
  product_lt: ObjectId
  product_gte: ObjectId
  name_exists: Boolean
  product_in: [ObjectId]
  name: String
  product_exists: Boolean
  weight_exists: Boolean
  product: ObjectId
  name_gte: String
  quantity: QuantityQueryInput
  quantity_exists: Boolean
  OR: [ShipmentLineQueryInput!]
  product_ne: ObjectId
  name_nin: [String]
}

input TourDraftShipmentsRelationInput {
  create: [ShipmentInsertInput]
  link: [ObjectId]
}

input TourStopGeoUpdateInput {
  type_unset: Boolean
  coordinates: [Float]
  coordinates_unset: Boolean
  type: String
}

input ConsolidateInputDatumProductQuantity {
  unit: ConsolidateInputDatumProductQuantityUnit
  value: Float
}

type ProductGroup {
  _id: ObjectId
  name: String
}

type TourLeg {
  destination: TourLegDestination
  distance: Quantity
  duration: Quantity
  origin: TourLegOrigin
  payload: TourLegPayload
}

input OfferUpdateInput {
  price: PriceUpdateInput
  ids: [String]
  ids_unset: Boolean
  product: OfferProductRelationInput
  owner: ActorRefUpdateInput
  updatedAt_unset: Boolean
  quantity_unset: Boolean
  updatedAt: DateTime
  createdAt: DateTime
  createdAt_unset: Boolean
  owner_unset: Boolean
  product_unset: Boolean
  quantity: QuantityUpdateInput
  _id: ObjectId
  _id_unset: Boolean
  price_unset: Boolean
}

input ConsolidateInputDatumOrderShippingMethod {
  ids: [String]
}

input ConsolidateInputDatumProductProducerWorkspace {
  ids: [String]
}

type VehicleBrand {
  name: String
}

input AreaInsertInput {
  withinAreas: [ObjectId]
  _id: ObjectId
  code: String
  name: String
  types: [String]
}

input ConsolidateInputDatumShippingMethodOwnerWorkspace {
  ids: [String]
}

type Vehicle {
  _id: ObjectId
  brand: VehicleBrand
  capacity: StorageCapacity
  compartments: [VehicleCompartment]
  costs: [VehicleCost]
  features: [VehicleFeature]
  model: VehicleModel
  name: String
  owner: ActorRef
  type: String
  weight: Quantity
}

input OrderBuyerUpdateInput {
  email_unset: Boolean
  phone: String
  customer: OrderBuyerCustomerRelationInput
  customer_unset: Boolean
  name: String
  person_unset: Boolean
  email: String
  person: ObjectId
  phone_unset: Boolean
  workspace: ObjectId
  workspace_unset: Boolean
  name_unset: Boolean
}

type DefaultPayload {
  status: String!
}

input TransactionChannelExternalTargetMarketplaceQueryInput {
  key_gte: String
  OR: [TransactionChannelExternalTargetMarketplaceQueryInput!]
  key_in: [String]
  key_nin: [String]
  key_exists: Boolean
  key_ne: String
  key_gt: String
  key_lt: String
  key: String
  key_lte: String
  AND: [TransactionChannelExternalTargetMarketplaceQueryInput!]
}

input TransactionChannelExternalTargetPlatformQueryInput {
  OR: [TransactionChannelExternalTargetPlatformQueryInput!]
  key_ne: String
  key_in: [String]
  AND: [TransactionChannelExternalTargetPlatformQueryInput!]
  key_gt: String
  key_lte: String
  key: String
  key_exists: Boolean
  key_lt: String
  key_nin: [String]
  key_gte: String
}

input OrderLineProductQueryInput {
  _id_gte: ObjectId
  _id_lt: ObjectId
  _id_lte: ObjectId
  AND: [OrderLineProductQueryInput!]
  _id_gt: ObjectId
  _id_in: [ObjectId]
  _id: ObjectId
  _id_nin: [ObjectId]
  _id_ne: ObjectId
  OR: [OrderLineProductQueryInput!]
  _id_exists: Boolean
}

input ProductGroupUpdateInput {
  name_unset: Boolean
  _id: ObjectId
  _id_unset: Boolean
  name: String
}

input OrderSellerWorkspaceRelationInput {
  create: WorkspaceInsertInput
  link: ObjectId
}

input PriceInsertInput {
  currency: CurrencyRefInsertInput
  value: Float
}

input ConsolidateInputDatumOrderSeller {
  supplier: ConsolidateInputDatumOrderSellerSupplier
  workspace: ConsolidateInputDatumOrderSellerWorkspace
}

scalar DateTime

input TourStopGeoQueryInput {
  type_gt: String
  type: String
  type_lt: String
  type_lte: String
  OR: [TourStopGeoQueryInput!]
  AND: [TourStopGeoQueryInput!]
  type_nin: [String]
  type_in: [String]
  type_ne: String
  coordinates_exists: Boolean
  coordinates: [Float]
  type_exists: Boolean
  coordinates_in: [Float]
  type_gte: String
  coordinates_nin: [Float]
}

input TourStopTaskDurationQueryInput {
  value_lt: Float
  value_in: [Float]
  value_nin: [Float]
  value_ne: Float
  AND: [TourStopTaskDurationQueryInput!]
  value_gt: Float
  unit: TourStopTaskDurationUnitQueryInput
  unit_exists: Boolean
  value: Float
  value_exists: Boolean
  value_gte: Float
  value_lte: Float
  OR: [TourStopTaskDurationQueryInput!]
}

input ConsolidateInputDatumSalesSessionOwnerWorkspace {
  ids: [String]
}

input VehicleCompartmentFeatureInsertInput {
  key: String
  name: String
}

input TourVehicleRelationInput {
  create: VehicleInsertInput
  link: ObjectId
}

input ConsolidateInputDatumOrder {
  buyer: ConsolidateInputDatumOrderBuyer
  paymentStatus: String
  broker: ConsolidateInputDatumOrderBroker
  status: String
  number: String
  lines: [ConsolidateInputDatumOrderLine]
  shipmentStatus: String
  createdAt: DateTime
  link: String
  totalPrice: ConsolidateInputDatumOrderTotalPrice
  channel: ConsolidateInputDatumOrderChannel
  ids: [String]
  shippingMethod: ConsolidateInputDatumOrderShippingMethod
  salesSession: ConsolidateInputDatumOrderSalesSession
  shippingAddress: ConsolidateInputDatumOrderShippingAddress
  seller: ConsolidateInputDatumOrderSeller
}

type WorkspaceCoconut {
  slackChannel: WorkspaceCoconutSlackChannel
}

type TourStopTaskDurationUnit {
  symbol: String
}

input AddressUpdateInput {
  country: String
  locality_unset: Boolean
  place_unset: Boolean
  geo_unset: Boolean
  postalCode_unset: Boolean
  phone: String
  locality: String
  country_unset: Boolean
  phone_unset: Boolean
  place: ObjectId
  street: String
  name: String
  name_unset: Boolean
  street_unset: Boolean
  postalCode: String
  geo: GeometryUpdateInput
}

input LocationInsertInput {
  type: String
  _id: ObjectId
  place: LocationPlaceRelationInput
}

input TransactionChannelFilterUpdateInput {
  isOrdered_unset: Boolean
  status: String
  status_unset: Boolean
  isOrdered: Boolean
}

input VehicleCostUpdateInput {
  resource_unset: Boolean
  driver_unset: Boolean
  value_unset: Boolean
  unit: UnitRefUpdateInput
  unit_unset: Boolean
  value: Float
  driver: VehicleCostDriverUpdateInput
  resource: VehicleCostResourceUpdateInput
  value_inc: Float
}

type ProductIngredientList {
  ingredient: ProductIngredientListIngredient
  quantity: ProductIngredientListQuantity
  sequence: String
}

input CodeListUpdateInput {
  items: CodeListItemsRelationInput
  ids_unset: Boolean
  name: String
  _id: ObjectId
  key_unset: Boolean
  name_unset: Boolean
  _id_unset: Boolean
  ids: [String]
  items_unset: Boolean
  key: String
}

input ConsolidateInputDatumOrderTotalPrice {
  value: Float
}

input ProductIngredientListUpdateInput {
  quantity: ProductIngredientListQuantityUpdateInput
  quantity_unset: Boolean
  sequence: String
  sequence_unset: Boolean
  ingredient: ProductIngredientListIngredientUpdateInput
  ingredient_unset: Boolean
}

input ConsolidateInputDatumProductIngredientList {
  sequence: String
  ingredient: ConsolidateInputDatumProductIngredientListIngredient
  quantity: ConsolidateInputDatumProductIngredientListQuantity
}

input TourLegDestinationQueryInput {
  place_lte: ObjectId
  OR: [TourLegDestinationQueryInput!]
  place_nin: [ObjectId]
  place_ne: ObjectId
  AND: [TourLegDestinationQueryInput!]
  place: ObjectId
  place_gte: ObjectId
  place_lt: ObjectId
  place_in: [ObjectId]
  place_exists: Boolean
  place_gt: ObjectId
}

enum OrderSortByInput {
  DATE_DESC
  SHIPPINGMETHOD_DESC
  URL_DESC
  CREATEDAT_ASC
  CREATEDAT_DESC
  UPDATEDAT_DESC
  URL_ASC
  UPDATEDAT_ASC
  NUMBER_ASC
  NUMBER_DESC
  SALESSESSION_ASC
  SALESSESSION_DESC
  _ID_ASC
  _ID_DESC
  DATE_ASC
  SHIPPINGMETHOD_ASC
}

input ConsolidationStrategyRuleQueryInput {
  collection: String
  collection_lt: String
  collection_in: [String]
  collection_ne: String
  profileKey_nin: [String]
  collection_lte: String
  collection_exists: Boolean
  OR: [ConsolidationStrategyRuleQueryInput!]
  collection_gt: String
  profileKey_gte: String
  collection_nin: [String]
  profileKey_in: [String]
  profileKey_exists: Boolean
  AND: [ConsolidationStrategyRuleQueryInput!]
  collection_gte: String
  profileKey_lte: String
  profileKey_lt: String
  profileKey: String
  profileKey_gt: String
  profileKey_ne: String
}

enum ProductSortByInput {
  GTIN_DESC
  SKU_DESC
  _ID_DESC
  GTIN_ASC
  CONSUMERUSAGEINSTRUCTIONS_ASC
  FUNCTIONALNAME_ASC
  REGULATEDNAME_DESC
  PUBLISHEDAT_ASC
  CONSUMERSAFETYINFORMATION_ASC
  DESCRIPTION_DESC
  MARKETINGMESSAGE_ASC
  SUPPLIERSPECIFIEDMINIMUMCONSUMERSTORAGEDAYS_ASC
  COUNTRYOFORIGIN_ASC
  CONSUMERSTORAGEINSTRUCTIONS_DESC
  GROUP_DESC
  NAME_ASC
  FUNCTIONALNAME_DESC
  MARKETINGMESSAGE_DESC
  _ID_ASC
  PUBLISHEDAT_DESC
  CREATEDAT_DESC
  CONSUMERSTORAGEINSTRUCTIONS_ASC
  INGREDIENTSTATEMENT_ASC
  SUPPLIERSPECIFIEDMINIMUMCONSUMERSTORAGEDAYS_DESC
  TEST_DESC
  CREATEDAT_ASC
  DESCRIPTION_ASC
  REGULATEDNAME_ASC
  TEST_ASC
  SKU_ASC
  COUNTRYOFORIGIN_DESC
  CONSUMERSAFETYINFORMATION_DESC
  CONSUMERUSAGEINSTRUCTIONS_DESC
  INGREDIENTSTATEMENT_DESC
  GROUP_ASC
  NAME_DESC
}

type ShipmentDelivery {
  country: String
  locality: String
  name: String
  phone: String
  place: Place
  postalCode: String
  street: String
}

type UpdateManyPayload {
  matchedCount: Int!
  modifiedCount: Int!
}

type Geometry {
  coordinates: [Float]
  type: String
}

input ProductQuantityUnitQueryInput {
  text_lte: String
  text_ne: String
  text_lt: String
  text_gt: String
  text_gte: String
  AND: [ProductQuantityUnitQueryInput!]
  text_nin: [String]
  text_exists: Boolean
  text_in: [String]
  OR: [ProductQuantityUnitQueryInput!]
  text: String
}

input VehicleInsertInput {
  weight: QuantityInsertInput
  capacity: StorageCapacityInsertInput
  model: VehicleModelInsertInput
  name: String
  _id: ObjectId
  compartments: [VehicleCompartmentInsertInput]
  owner: ActorRefInsertInput
  brand: VehicleBrandInsertInput
  costs: [VehicleCostInsertInput]
  features: [VehicleFeatureInsertInput]
  type: String
}

input CurrencyRefUpdateInput {
  code: String
  code_unset: Boolean
  symbol: String
  symbol_unset: Boolean
}

input ProductInsertInput {
  images: [ProductImageInsertInput]
  gtin: String
  marketingMessage: String
  consumerUsageInstructions: String
  producer: ActorRefInsertInput
  sku: String
  group: ProductGroupRelationInput
  functionalName: String
  description: String
  netWeight: QuantityInsertInput
  consumerSafetyInformation: String
  categories: ProductCategoriesRelationInput
  ingredientList: [ProductIngredientListInsertInput]
  test: String
  consumerStorageInstructions: String
  owner: ActorRefInsertInput
  quantity: ProductQuantityInsertInput
  ids: [String]
  grossWeight: QuantityInsertInput
  brand: ProductBrandInsertInput
  weight: QuantityInsertInput
  ingredientStatement: String
  countryOfOrigin: ProductCountryOfOriginRelationInput
  regulatedName: String
  name: String
  publishedAt: DateTime
  _id: ObjectId
  netVolume: QuantityInsertInput
  supplierSpecifiedMinimumConsumerStorageDays: Int
  image: ProductImageInsertInput
  allergenList: [ProductAllergenListInsertInput]
  createdAt: DateTime
  nutrientList: [ProductNutrientListInsertInput]
}

input ConsolidateInputDatumOrderShippingAddressPlace {
  ids: [String]
}

type TranslationFr {
  name: String
}

type CodeTranslationEn {
  name: String
}

type OrderBuyer {
  customer: Customer
  email: String
  name: String
  person: ObjectId
  phone: String
  workspace: ObjectId
}

input ConsolidateInputDatumCustomerPlace {
  ids: [String]
}

input ConsolidateInputDatumShippingMethod {
  owner: ConsolidateInputDatumShippingMethodOwner
  pickup: ConsolidateInputDatumShippingMethodPickup
  ids: [String]
  type: String
  name: String
  description: String
}

enum ShippingMethodSortByInput {
  TYPE_DESC
  NAME_ASC
  NAME_DESC
  _ID_ASC
  _ID_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  TYPE_ASC
}

input OrderBuyerInsertInput {
  email: String
  name: String
  person: ObjectId
  phone: String
  workspace: ObjectId
  customer: OrderBuyerCustomerRelationInput
}

input ConsolidateInputDatumCustomer {
  places: [ConsolidateInputDatumCustomerPlace]
  ids: [String]
  name: String
  owner: ConsolidateInputDatumCustomerOwner
}

input TourDraftUpdateInput {
  shipments_unset: Boolean
  stops_unset: Boolean
  validation: TourDraftValidationUpdateInput
  validation_unset: Boolean
  vehicle_unset: Boolean
  distance_unset: Boolean
  shipments: TourDraftShipmentsRelationInput
  tour: TourDraftTourRelationInput
  stops: [TourStopUpdateInput]
  duration_unset: Boolean
  optimisation_unset: Boolean
  owner_unset: Boolean
  _id_unset: Boolean
  tour_unset: Boolean
  owner: ActorRefUpdateInput
  vehicle: TourDraftVehicleRelationInput
  distance: QuantityUpdateInput
  duration: QuantityUpdateInput
  _id: ObjectId
  optimisation: TourDraftOptimisationUpdateInput
}

input ConsolidateInputDatumSupplier {
  ids: [String]
  name: String
  owner: ConsolidateInputDatumSupplierOwner
}

input StorageCapacityQueryInput {
  volume: QuantityQueryInput
  volume_exists: Boolean
  weight: QuantityQueryInput
  weight_exists: Boolean
  OR: [StorageCapacityQueryInput!]
  AND: [StorageCapacityQueryInput!]
}

input ProductIngredientListInsertInput {
  sequence: String
  ingredient: ProductIngredientListIngredientInsertInput
  quantity: ProductIngredientListQuantityInsertInput
}

input ConsolidateInputDatumOfferPrice {
  value: Float
}

input CodeListQueryInput {
  _id_exists: Boolean
  items_nin: [CodeQueryInput]
  key_in: [String]
  _id_gte: ObjectId
  items: [CodeQueryInput]
  name_in: [String]
  AND: [CodeListQueryInput!]
  items_exists: Boolean
  key_ne: String
  _id_in: [ObjectId]
  name: String
  ids_exists: Boolean
  key_nin: [String]
  OR: [CodeListQueryInput!]
  key_exists: Boolean
  name_lt: String
  name_lte: String
  _id_ne: ObjectId
  ids_in: [String]
  name_gt: String
  name_nin: [String]
  _id_lt: ObjectId
  key_lt: String
  name_gte: String
  name_exists: Boolean
  key_lte: String
  _id_nin: [ObjectId]
  _id_lte: ObjectId
  name_ne: String
  ids: [String]
  ids_nin: [String]
  _id: ObjectId
  _id_gt: ObjectId
  items_in: [CodeQueryInput]
  key_gte: String
  key: String
  key_gt: String
}

input VehicleCostDriverInsertInput {
  type: String
  unit: UnitRefInsertInput
  factor: Float
}

input WorkspaceUpdateInput {
  place_unset: Boolean
  key: String
  person_unset: Boolean
  type: String
  vatId_unset: Boolean
  _id: ObjectId
  place: WorkspacePlaceRelationInput
  name_unset: Boolean
  type_unset: Boolean
  marketplace: WorkspaceMarketplaceUpdateInput
  name: String
  key_unset: Boolean
  taxId_unset: Boolean
  vatId: String
  geo: GeometryUpdateInput
  taxId: String
  address_unset: Boolean
  geo_unset: Boolean
  ids: [String]
  enterprise_unset: Boolean
  ids_unset: Boolean
  coconut: WorkspaceCoconutUpdateInput
  enterprise: WorkspaceEnterpriseUpdateInput
  _id_unset: Boolean
  address: AddressUpdateInput
  marketplace_unset: Boolean
  person: ObjectId
  coconut_unset: Boolean
}

input ConsolidationStrategyProfileQueryInput {
  unless_nin: [ConsolidationStrategyProfileUnlessQueryInput]
  action_nin: [String]
  key: String
  unless_in: [ConsolidationStrategyProfileUnlessQueryInput]
  unless: [ConsolidationStrategyProfileUnlessQueryInput]
  key_nin: [String]
  key_exists: Boolean
  key_ne: String
  action_in: [String]
  key_lte: String
  OR: [ConsolidationStrategyProfileQueryInput!]
  action_gte: String
  action_lte: String
  key_gt: String
  action_exists: Boolean
  key_lt: String
  key_in: [String]
  action_lt: String
  action: String
  action_gt: String
  unless_exists: Boolean
  AND: [ConsolidationStrategyProfileQueryInput!]
  action_ne: String
  key_gte: String
}

input TransactionChannelExternalTargetUpdateInput {
  platform_unset: Boolean
  enterprise: TransactionChannelExternalTargetEnterpriseUpdateInput
  enterprise_unset: Boolean
  marketplace: TransactionChannelExternalTargetMarketplaceUpdateInput
  marketplace_unset: Boolean
  platform: TransactionChannelExternalTargetPlatformUpdateInput
}

type TourLegDestination {
  place: ObjectId
}

input InventoryItemUpdateInput {
  _id: ObjectId
  _id_unset: Boolean
  product: ObjectId
  product_unset: Boolean
  quantity: QuantityUpdateInput
  quantity_unset: Boolean
}

input ConsolidateInputDatumProductNetWeightUnit {
  code: String
}

input VehicleCostResourceCurrencyInsertInput {
  symbol: String
}

type ProductQuantity {
  unit: ProductQuantityUnit
  value: Float
}

enum OfferSortByInput {
  PRODUCT_ASC
  PRODUCT_DESC
  UPDATEDAT_ASC
  UPDATEDAT_DESC
  _ID_ASC
  _ID_DESC
  CREATEDAT_ASC
  CREATEDAT_DESC
}

input ConsolidationStrategyProfileUpdateInput {
  key: String
  key_unset: Boolean
  unless: [ConsolidationStrategyProfileUnlessUpdateInput]
  unless_unset: Boolean
  action: String
  action_unset: Boolean
}

type OrderLineProduct {
  _id: ObjectId
}

enum ProductClassificationSortByInput {
  _ID_DESC
  KEY_ASC
  KEY_DESC
  NAME_ASC
  NAME_DESC
  _ID_ASC
}

input InventoryItemQueryInput {
  product_ne: ObjectId
  OR: [InventoryItemQueryInput!]
  _id: ObjectId
  _id_nin: [ObjectId]
  quantity: QuantityQueryInput
  _id_gte: ObjectId
  product_exists: Boolean
  product_gte: ObjectId
  product_nin: [ObjectId]
  _id_in: [ObjectId]
  _id_lte: ObjectId
  product_lte: ObjectId
  product_in: [ObjectId]
  _id_exists: Boolean
  product: ObjectId
  product_gt: ObjectId
  AND: [InventoryItemQueryInput!]
  _id_gt: ObjectId
  _id_lt: ObjectId
  _id_ne: ObjectId
  product_lt: ObjectId
  quantity_exists: Boolean
}

type Mutation {
  consolidate(input: ConsolidateInput): DefaultPayload
  deleteManyAreas(query: AreaQueryInput): DeleteManyPayload
  deleteManyCatalogItems(query: CatalogItemQueryInput): DeleteManyPayload
  deleteManyCatalogs(query: CatalogQueryInput): DeleteManyPayload
  deleteManyCodeLists(query: CodeListQueryInput): DeleteManyPayload
  deleteManyCodes(query: CodeQueryInput): DeleteManyPayload
  deleteManyConsolidationStrategies(
    query: ConsolidationStrategyQueryInput
  ): DeleteManyPayload
  deleteManyCustomers(query: CustomerQueryInput): DeleteManyPayload
  deleteManyInventoryItems(query: InventoryItemQueryInput): DeleteManyPayload
  deleteManyLocations(query: LocationQueryInput): DeleteManyPayload
  deleteManyOffers(query: OfferQueryInput): DeleteManyPayload
  deleteManyOrders(query: OrderQueryInput): DeleteManyPayload
  deleteManyPlaces(query: PlaceQueryInput): DeleteManyPayload
  deleteManyProductCategories(
    query: ProductCategoryQueryInput
  ): DeleteManyPayload
  deleteManyProductClassifications(
    query: ProductClassificationQueryInput
  ): DeleteManyPayload
  deleteManyProductGroups(query: ProductGroupQueryInput): DeleteManyPayload
  deleteManyProducts(query: ProductQueryInput): DeleteManyPayload
  deleteManySalesSessions(query: SalesSessionQueryInput): DeleteManyPayload
  deleteManyShipments(query: ShipmentQueryInput): DeleteManyPayload
  deleteManyShippingMethods(query: ShippingMethodQueryInput): DeleteManyPayload
  deleteManySuppliers(query: SupplierQueryInput): DeleteManyPayload
  deleteManyTourDrafts(query: TourDraftQueryInput): DeleteManyPayload
  deleteManyTours(query: TourQueryInput): DeleteManyPayload
  deleteManyTransactionChannels(
    query: TransactionChannelQueryInput
  ): DeleteManyPayload
  deleteManyVehicles(query: VehicleQueryInput): DeleteManyPayload
  deleteManyWorkspaces(query: WorkspaceQueryInput): DeleteManyPayload
  deleteOneArea(query: AreaQueryInput!): Area
  deleteOneCatalog(query: CatalogQueryInput!): Catalog
  deleteOneCatalogItem(query: CatalogItemQueryInput!): CatalogItem
  deleteOneCode(query: CodeQueryInput!): Code
  deleteOneCodeList(query: CodeListQueryInput!): CodeList
  deleteOneConsolidationStrategy(
    query: ConsolidationStrategyQueryInput!
  ): ConsolidationStrategy
  deleteOneCustomer(query: CustomerQueryInput!): Customer
  deleteOneInventoryItem(query: InventoryItemQueryInput!): InventoryItem
  deleteOneLocation(query: LocationQueryInput!): Location
  deleteOneOffer(query: OfferQueryInput!): Offer
  deleteOneOrder(query: OrderQueryInput!): Order
  deleteOnePlace(query: PlaceQueryInput!): Place
  deleteOneProduct(query: ProductQueryInput!): Product
  deleteOneProductCategory(query: ProductCategoryQueryInput!): ProductCategory
  deleteOneProductClassification(
    query: ProductClassificationQueryInput!
  ): ProductClassification
  deleteOneProductGroup(query: ProductGroupQueryInput!): ProductGroup
  deleteOneSalesSession(query: SalesSessionQueryInput!): SalesSession
  deleteOneShipment(query: ShipmentQueryInput!): Shipment
  deleteOneShippingMethod(query: ShippingMethodQueryInput!): ShippingMethod
  deleteOneSupplier(query: SupplierQueryInput!): Supplier
  deleteOneTour(query: TourQueryInput!): Tour
  deleteOneTourDraft(query: TourDraftQueryInput!): TourDraft
  deleteOneTransactionChannel(
    query: TransactionChannelQueryInput!
  ): TransactionChannel
  deleteOneVehicle(query: VehicleQueryInput!): Vehicle
  deleteOneWorkspace(query: WorkspaceQueryInput!): Workspace
  insertManyAreas(data: [AreaInsertInput!]!): InsertManyPayload
  insertManyCatalogItems(data: [CatalogItemInsertInput!]!): InsertManyPayload
  insertManyCatalogs(data: [CatalogInsertInput!]!): InsertManyPayload
  insertManyCodeLists(data: [CodeListInsertInput!]!): InsertManyPayload
  insertManyCodes(data: [CodeInsertInput!]!): InsertManyPayload
  insertManyConsolidationStrategies(
    data: [ConsolidationStrategyInsertInput!]!
  ): InsertManyPayload
  insertManyCustomers(data: [CustomerInsertInput!]!): InsertManyPayload
  insertManyInventoryItems(
    data: [InventoryItemInsertInput!]!
  ): InsertManyPayload
  insertManyLocations(data: [LocationInsertInput!]!): InsertManyPayload
  insertManyOffers(data: [OfferInsertInput!]!): InsertManyPayload
  insertManyOrders(data: [OrderInsertInput!]!): InsertManyPayload
  insertManyPlaces(data: [PlaceInsertInput!]!): InsertManyPayload
  insertManyProductCategories(
    data: [ProductCategoryInsertInput!]!
  ): InsertManyPayload
  insertManyProductClassifications(
    data: [ProductClassificationInsertInput!]!
  ): InsertManyPayload
  insertManyProductGroups(data: [ProductGroupInsertInput!]!): InsertManyPayload
  insertManyProducts(data: [ProductInsertInput!]!): InsertManyPayload
  insertManySalesSessions(data: [SalesSessionInsertInput!]!): InsertManyPayload
  insertManyShipments(data: [ShipmentInsertInput!]!): InsertManyPayload
  insertManyShippingMethods(
    data: [ShippingMethodInsertInput!]!
  ): InsertManyPayload
  insertManySuppliers(data: [SupplierInsertInput!]!): InsertManyPayload
  insertManyTourDrafts(data: [TourDraftInsertInput!]!): InsertManyPayload
  insertManyTours(data: [TourInsertInput!]!): InsertManyPayload
  insertManyTransactionChannels(
    data: [TransactionChannelInsertInput!]!
  ): InsertManyPayload
  insertManyVehicles(data: [VehicleInsertInput!]!): InsertManyPayload
  insertManyWorkspaces(data: [WorkspaceInsertInput!]!): InsertManyPayload
  insertOneArea(data: AreaInsertInput!): Area
  insertOneCatalog(data: CatalogInsertInput!): Catalog
  insertOneCatalogItem(data: CatalogItemInsertInput!): CatalogItem
  insertOneCode(data: CodeInsertInput!): Code
  insertOneCodeList(data: CodeListInsertInput!): CodeList
  insertOneConsolidationStrategy(
    data: ConsolidationStrategyInsertInput!
  ): ConsolidationStrategy
  insertOneCustomer(data: CustomerInsertInput!): Customer
  insertOneInventoryItem(data: InventoryItemInsertInput!): InventoryItem
  insertOneLocation(data: LocationInsertInput!): Location
  insertOneOffer(data: OfferInsertInput!): Offer
  insertOneOrder(data: OrderInsertInput!): Order
  insertOnePlace(data: PlaceInsertInput!): Place
  insertOneProduct(data: ProductInsertInput!): Product
  insertOneProductCategory(data: ProductCategoryInsertInput!): ProductCategory
  insertOneProductClassification(
    data: ProductClassificationInsertInput!
  ): ProductClassification
  insertOneProductGroup(data: ProductGroupInsertInput!): ProductGroup
  insertOneSalesSession(data: SalesSessionInsertInput!): SalesSession
  insertOneShipment(data: ShipmentInsertInput!): Shipment
  insertOneShippingMethod(data: ShippingMethodInsertInput!): ShippingMethod
  insertOneSupplier(data: SupplierInsertInput!): Supplier
  insertOneTour(data: TourInsertInput!): Tour
  insertOneTourDraft(data: TourDraftInsertInput!): TourDraft
  insertOneTransactionChannel(
    data: TransactionChannelInsertInput!
  ): TransactionChannel
  insertOneVehicle(data: VehicleInsertInput!): Vehicle
  insertOneWorkspace(data: WorkspaceInsertInput!): Workspace
  replaceOneArea(query: AreaQueryInput, data: AreaInsertInput!): Area
  replaceOneCatalog(
    query: CatalogQueryInput
    data: CatalogInsertInput!
  ): Catalog
  replaceOneCatalogItem(
    query: CatalogItemQueryInput
    data: CatalogItemInsertInput!
  ): CatalogItem
  replaceOneCode(query: CodeQueryInput, data: CodeInsertInput!): Code
  replaceOneCodeList(
    query: CodeListQueryInput
    data: CodeListInsertInput!
  ): CodeList
  replaceOneConsolidationStrategy(
    query: ConsolidationStrategyQueryInput
    data: ConsolidationStrategyInsertInput!
  ): ConsolidationStrategy
  replaceOneCustomer(
    query: CustomerQueryInput
    data: CustomerInsertInput!
  ): Customer
  replaceOneInventoryItem(
    query: InventoryItemQueryInput
    data: InventoryItemInsertInput!
  ): InventoryItem
  replaceOneLocation(
    query: LocationQueryInput
    data: LocationInsertInput!
  ): Location
  replaceOneOffer(query: OfferQueryInput, data: OfferInsertInput!): Offer
  replaceOneOrder(query: OrderQueryInput, data: OrderInsertInput!): Order
  replaceOnePlace(query: PlaceQueryInput, data: PlaceInsertInput!): Place
  replaceOneProduct(
    query: ProductQueryInput
    data: ProductInsertInput!
  ): Product
  replaceOneProductCategory(
    query: ProductCategoryQueryInput
    data: ProductCategoryInsertInput!
  ): ProductCategory
  replaceOneProductClassification(
    query: ProductClassificationQueryInput
    data: ProductClassificationInsertInput!
  ): ProductClassification
  replaceOneProductGroup(
    query: ProductGroupQueryInput
    data: ProductGroupInsertInput!
  ): ProductGroup
  replaceOneSalesSession(
    query: SalesSessionQueryInput
    data: SalesSessionInsertInput!
  ): SalesSession
  replaceOneShipment(
    data: ShipmentInsertInput!
    query: ShipmentQueryInput
  ): Shipment
  replaceOneShippingMethod(
    query: ShippingMethodQueryInput
    data: ShippingMethodInsertInput!
  ): ShippingMethod
  replaceOneSupplier(
    query: SupplierQueryInput
    data: SupplierInsertInput!
  ): Supplier
  replaceOneTour(query: TourQueryInput, data: TourInsertInput!): Tour
  replaceOneTourDraft(
    query: TourDraftQueryInput
    data: TourDraftInsertInput!
  ): TourDraft
  replaceOneTransactionChannel(
    query: TransactionChannelQueryInput
    data: TransactionChannelInsertInput!
  ): TransactionChannel
  replaceOneVehicle(
    query: VehicleQueryInput
    data: VehicleInsertInput!
  ): Vehicle
  replaceOneWorkspace(
    query: WorkspaceQueryInput
    data: WorkspaceInsertInput!
  ): Workspace
  updateManyAreas(
    set: AreaUpdateInput!
    query: AreaQueryInput
  ): UpdateManyPayload
  updateManyCatalogItems(
    query: CatalogItemQueryInput
    set: CatalogItemUpdateInput!
  ): UpdateManyPayload
  updateManyCatalogs(
    query: CatalogQueryInput
    set: CatalogUpdateInput!
  ): UpdateManyPayload
  updateManyCodeLists(
    query: CodeListQueryInput
    set: CodeListUpdateInput!
  ): UpdateManyPayload
  updateManyCodes(
    query: CodeQueryInput
    set: CodeUpdateInput!
  ): UpdateManyPayload
  updateManyConsolidationStrategies(
    query: ConsolidationStrategyQueryInput
    set: ConsolidationStrategyUpdateInput!
  ): UpdateManyPayload
  updateManyCustomers(
    query: CustomerQueryInput
    set: CustomerUpdateInput!
  ): UpdateManyPayload
  updateManyInventoryItems(
    query: InventoryItemQueryInput
    set: InventoryItemUpdateInput!
  ): UpdateManyPayload
  updateManyLocations(
    query: LocationQueryInput
    set: LocationUpdateInput!
  ): UpdateManyPayload
  updateManyOffers(
    query: OfferQueryInput
    set: OfferUpdateInput!
  ): UpdateManyPayload
  updateManyOrders(
    query: OrderQueryInput
    set: OrderUpdateInput!
  ): UpdateManyPayload
  updateManyPlaces(
    query: PlaceQueryInput
    set: PlaceUpdateInput!
  ): UpdateManyPayload
  updateManyProductCategories(
    query: ProductCategoryQueryInput
    set: ProductCategoryUpdateInput!
  ): UpdateManyPayload
  updateManyProductClassifications(
    set: ProductClassificationUpdateInput!
    query: ProductClassificationQueryInput
  ): UpdateManyPayload
  updateManyProductGroups(
    set: ProductGroupUpdateInput!
    query: ProductGroupQueryInput
  ): UpdateManyPayload
  updateManyProducts(
    query: ProductQueryInput
    set: ProductUpdateInput!
  ): UpdateManyPayload
  updateManySalesSessions(
    query: SalesSessionQueryInput
    set: SalesSessionUpdateInput!
  ): UpdateManyPayload
  updateManyShipments(
    query: ShipmentQueryInput
    set: ShipmentUpdateInput!
  ): UpdateManyPayload
  updateManyShippingMethods(
    query: ShippingMethodQueryInput
    set: ShippingMethodUpdateInput!
  ): UpdateManyPayload
  updateManySuppliers(
    query: SupplierQueryInput
    set: SupplierUpdateInput!
  ): UpdateManyPayload
  updateManyTourDrafts(
    query: TourDraftQueryInput
    set: TourDraftUpdateInput!
  ): UpdateManyPayload
  updateManyTours(
    query: TourQueryInput
    set: TourUpdateInput!
  ): UpdateManyPayload
  updateManyTransactionChannels(
    query: TransactionChannelQueryInput
    set: TransactionChannelUpdateInput!
  ): UpdateManyPayload
  updateManyVehicles(
    query: VehicleQueryInput
    set: VehicleUpdateInput!
  ): UpdateManyPayload
  updateManyWorkspaces(
    query: WorkspaceQueryInput
    set: WorkspaceUpdateInput!
  ): UpdateManyPayload
  updateOneArea(query: AreaQueryInput, set: AreaUpdateInput!): Area
  updateOneCatalog(query: CatalogQueryInput, set: CatalogUpdateInput!): Catalog
  updateOneCatalogItem(
    query: CatalogItemQueryInput
    set: CatalogItemUpdateInput!
  ): CatalogItem
  updateOneCode(query: CodeQueryInput, set: CodeUpdateInput!): Code
  updateOneCodeList(
    query: CodeListQueryInput
    set: CodeListUpdateInput!
  ): CodeList
  updateOneConsolidationStrategy(
    query: ConsolidationStrategyQueryInput
    set: ConsolidationStrategyUpdateInput!
  ): ConsolidationStrategy
  updateOneCustomer(
    query: CustomerQueryInput
    set: CustomerUpdateInput!
  ): Customer
  updateOneInventoryItem(
    query: InventoryItemQueryInput
    set: InventoryItemUpdateInput!
  ): InventoryItem
  updateOneLocation(
    query: LocationQueryInput
    set: LocationUpdateInput!
  ): Location
  updateOneOffer(set: OfferUpdateInput!, query: OfferQueryInput): Offer
  updateOneOrder(query: OrderQueryInput, set: OrderUpdateInput!): Order
  updateOnePlace(query: PlaceQueryInput, set: PlaceUpdateInput!): Place
  updateOneProduct(query: ProductQueryInput, set: ProductUpdateInput!): Product
  updateOneProductCategory(
    query: ProductCategoryQueryInput
    set: ProductCategoryUpdateInput!
  ): ProductCategory
  updateOneProductClassification(
    query: ProductClassificationQueryInput
    set: ProductClassificationUpdateInput!
  ): ProductClassification
  updateOneProductGroup(
    query: ProductGroupQueryInput
    set: ProductGroupUpdateInput!
  ): ProductGroup
  updateOneSalesSession(
    query: SalesSessionQueryInput
    set: SalesSessionUpdateInput!
  ): SalesSession
  updateOneShipment(
    query: ShipmentQueryInput
    set: ShipmentUpdateInput!
  ): Shipment
  updateOneShippingMethod(
    query: ShippingMethodQueryInput
    set: ShippingMethodUpdateInput!
  ): ShippingMethod
  updateOneSupplier(
    query: SupplierQueryInput
    set: SupplierUpdateInput!
  ): Supplier
  updateOneTour(query: TourQueryInput, set: TourUpdateInput!): Tour
  updateOneTourDraft(
    query: TourDraftQueryInput
    set: TourDraftUpdateInput!
  ): TourDraft
  updateOneTransactionChannel(
    set: TransactionChannelUpdateInput!
    query: TransactionChannelQueryInput
  ): TransactionChannel
  updateOneVehicle(query: VehicleQueryInput, set: VehicleUpdateInput!): Vehicle
  updateOneWorkspace(
    query: WorkspaceQueryInput
    set: WorkspaceUpdateInput!
  ): Workspace
  upsertOneArea(data: AreaInsertInput!, query: AreaQueryInput): Area
  upsertOneCatalog(query: CatalogQueryInput, data: CatalogInsertInput!): Catalog
  upsertOneCatalogItem(
    query: CatalogItemQueryInput
    data: CatalogItemInsertInput!
  ): CatalogItem
  upsertOneCode(query: CodeQueryInput, data: CodeInsertInput!): Code
  upsertOneCodeList(
    query: CodeListQueryInput
    data: CodeListInsertInput!
  ): CodeList
  upsertOneConsolidationStrategy(
    data: ConsolidationStrategyInsertInput!
    query: ConsolidationStrategyQueryInput
  ): ConsolidationStrategy
  upsertOneCustomer(
    query: CustomerQueryInput
    data: CustomerInsertInput!
  ): Customer
  upsertOneInventoryItem(
    query: InventoryItemQueryInput
    data: InventoryItemInsertInput!
  ): InventoryItem
  upsertOneLocation(
    query: LocationQueryInput
    data: LocationInsertInput!
  ): Location
  upsertOneOffer(query: OfferQueryInput, data: OfferInsertInput!): Offer
  upsertOneOrder(data: OrderInsertInput!, query: OrderQueryInput): Order
  upsertOnePlace(query: PlaceQueryInput, data: PlaceInsertInput!): Place
  upsertOneProduct(query: ProductQueryInput, data: ProductInsertInput!): Product
  upsertOneProductCategory(
    query: ProductCategoryQueryInput
    data: ProductCategoryInsertInput!
  ): ProductCategory
  upsertOneProductClassification(
    data: ProductClassificationInsertInput!
    query: ProductClassificationQueryInput
  ): ProductClassification
  upsertOneProductGroup(
    query: ProductGroupQueryInput
    data: ProductGroupInsertInput!
  ): ProductGroup
  upsertOneSalesSession(
    query: SalesSessionQueryInput
    data: SalesSessionInsertInput!
  ): SalesSession
  upsertOneShipment(
    query: ShipmentQueryInput
    data: ShipmentInsertInput!
  ): Shipment
  upsertOneShippingMethod(
    query: ShippingMethodQueryInput
    data: ShippingMethodInsertInput!
  ): ShippingMethod
  upsertOneSupplier(
    query: SupplierQueryInput
    data: SupplierInsertInput!
  ): Supplier
  upsertOneTour(query: TourQueryInput, data: TourInsertInput!): Tour
  upsertOneTourDraft(
    query: TourDraftQueryInput
    data: TourDraftInsertInput!
  ): TourDraft
  upsertOneTransactionChannel(
    query: TransactionChannelQueryInput
    data: TransactionChannelInsertInput!
  ): TransactionChannel
  upsertOneVehicle(query: VehicleQueryInput, data: VehicleInsertInput!): Vehicle
  upsertOneWorkspace(
    query: WorkspaceQueryInput
    data: WorkspaceInsertInput!
  ): Workspace
}

input WorkspaceInsertInput {
  taxId: String
  vatId: String
  _id: ObjectId
  ids: [String]
  name: String
  type: String
  person: ObjectId
  enterprise: WorkspaceEnterpriseInsertInput
  key: String
  address: AddressInsertInput
  geo: GeometryInsertInput
  marketplace: WorkspaceMarketplaceInsertInput
  place: WorkspacePlaceRelationInput
  coconut: WorkspaceCoconutInsertInput
}

input TourStopQueryInput {
  place_lt: ObjectId
  place_in: [ObjectId]
  place_exists: Boolean
  estimatedTimeOfDeparture_exists: Boolean
  estimatedTimeOfArrival_lte: DateTime
  estimatedTimeOfDeparture: DateTime
  place_gt: ObjectId
  name: String
  order: Int
  estimatedTimeOfDeparture_gte: DateTime
  geo: TourStopGeoQueryInput
  order_in: [Int]
  pickup_exists: Boolean
  estimatedTimeOfDeparture_nin: [DateTime]
  duration_exists: Boolean
  place_gte: ObjectId
  tasks: [TourStopTaskQueryInput]
  pickup: TourStopPickupQueryInput
  estimatedTimeOfArrival_gte: DateTime
  order_nin: [Int]
  estimatedTimeOfArrival_gt: DateTime
  name_gte: String
  name_lt: String
  estimatedTimeOfDeparture_lte: DateTime
  actualTimeOfArrival_lte: DateTime
  estimatedTimeOfArrival_exists: Boolean
  order_ne: Int
  name_in: [String]
  actualTimeOfDeparture_gt: DateTime
  actualTimeOfDeparture_gte: DateTime
  place_nin: [ObjectId]
  estimatedTimeOfArrival: DateTime
  delivery_exists: Boolean
  actualTimeOfArrival_gte: DateTime
  actualTimeOfArrival: DateTime
  place_ne: ObjectId
  tasks_nin: [TourStopTaskQueryInput]
  tasks_in: [TourStopTaskQueryInput]
  name_ne: String
  actualTimeOfDeparture_exists: Boolean
  actualTimeOfArrival_gt: DateTime
  estimatedTimeOfArrival_nin: [DateTime]
  name_lte: String
  actualTimeOfArrival_nin: [DateTime]
  estimatedTimeOfArrival_ne: DateTime
  actualTimeOfDeparture_ne: DateTime
  place: ObjectId
  estimatedTimeOfDeparture_in: [DateTime]
  actualTimeOfArrival_lt: DateTime
  actualTimeOfDeparture_lte: DateTime
  actualTimeOfDeparture_lt: DateTime
  estimatedTimeOfDeparture_lt: DateTime
  OR: [TourStopQueryInput!]
  place_lte: ObjectId
  estimatedTimeOfDeparture_gt: DateTime
  actualTimeOfArrival_exists: Boolean
  actualTimeOfArrival_in: [DateTime]
  actualTimeOfDeparture_in: [DateTime]
  order_gte: Int
  tasks_exists: Boolean
  delivery: TourStopDeliveryQueryInput
  actualTimeOfDeparture: DateTime
  estimatedTimeOfArrival_lt: DateTime
  estimatedTimeOfArrival_in: [DateTime]
  duration: QuantityQueryInput
  AND: [TourStopQueryInput!]
  order_lt: Int
  name_gt: String
  geo_exists: Boolean
  order_gt: Int
  order_lte: Int
  order_exists: Boolean
  actualTimeOfArrival_ne: DateTime
  estimatedTimeOfDeparture_ne: DateTime
  actualTimeOfDeparture_nin: [DateTime]
  name_nin: [String]
  name_exists: Boolean
}

type ShipmentLine {
  name: String
  product: ObjectId
  quantity: Quantity
  weight: Quantity
}

type CurrencyRef {
  code: String
  symbol: String
}

input TransactionChannelExternalTargetEnterpriseInsertInput {
  id: String
}

input CodeRefUpdateInput {
  key: String
  key_unset: Boolean
  code: String
  code_unset: Boolean
}

input ConsolidateInputDatumProductIngredientListQuantity {
  percentage: Float
}

input VehicleCostDriverQueryInput {
  factor_nin: [Float]
  factor_exists: Boolean
  factor_lt: Float
  factor_in: [Float]
  unit: UnitRefQueryInput
  factor_gt: Float
  type_ne: String
  factor_lte: Float
  factor_ne: Float
  OR: [VehicleCostDriverQueryInput!]
  type_lte: String
  type_gte: String
  AND: [VehicleCostDriverQueryInput!]
  factor: Float
  unit_exists: Boolean
  type: String
  type_in: [String]
  type_nin: [String]
  type_lt: String
  type_gt: String
  factor_gte: Float
  type_exists: Boolean
}

input ConsolidationStrategyProfileUnlessFilterInsertInput {
  regex: String
  isRoot: Boolean
}

input ConsolidateInputDatumShippingMethodPickup {
  place: ConsolidateInputDatumShippingMethodPickupPlace
}

input ConsolidateInputDatumSupplierOwner {
  workspace: ConsolidateInputDatumSupplierOwnerWorkspace
}

input ConsolidateInputDatumOrderBrokerWorkspace {
  ids: [String]
}

input ProductIngredientListIngredientQueryInput {
  OR: [ProductIngredientListIngredientQueryInput!]
  AND: [ProductIngredientListIngredientQueryInput!]
  name_gte: String
  name_lte: String
  name_exists: Boolean
  name: String
  name_ne: String
  name_gt: String
  name_lt: String
  name_in: [String]
  name_nin: [String]
}

type CodeTranslationNl {
  name: String
}

input CurrencyRefInsertInput {
  symbol: String
  code: String
}

input TourStopTaskDurationUpdateInput {
  value: Float
  value_inc: Float
  value_unset: Boolean
  unit: TourStopTaskDurationUnitUpdateInput
  unit_unset: Boolean
}

input CatalogUpdateInput {
  owner: ActorRefUpdateInput
  owner_unset: Boolean
  locations: CatalogLocationsRelationInput
  locations_unset: Boolean
  _id: ObjectId
  _id_unset: Boolean
  enterprise: ObjectId
  enterprise_unset: Boolean
}

type ProductClassification {
  _id: ObjectId
  key: String
  name: String
}

input PlaceInsertInput {
  gln: String
  name: String
  _id: ObjectId
  address: AddressInsertInput
  withinAreas: [ObjectId]
  code: String
  center: GeometryInsertInput
  owner: ActorRefInsertInput
  types: [String]
  ids: [String]
  geo: GeometryInsertInput
}

input OfferProductRelationInput {
  create: ProductInsertInput
  link: ObjectId
}

input TransactionChannelInternalTargetUpdateInput {
  workspace: TransactionChannelInternalTargetWorkspaceRelationInput
  workspace_unset: Boolean
}

input ProductQuantityUpdateInput {
  value_unset: Boolean
  unit: ProductQuantityUnitUpdateInput
  unit_unset: Boolean
  value: Float
  value_inc: Float
}

input ConsolidateInputDatumProductGroupProducer {
  workspace: ConsolidateInputDatumProductGroupProducerWorkspace
}

input ConsolidateInputDatumProductNetWeight {
  unit: ConsolidateInputDatumProductNetWeightUnit
  value: Float
}

input CodeTranslationFrUpdateInput {
  name: String
  name_unset: Boolean
}

input TourStopTaskDurationInsertInput {
  value: Float
  unit: TourStopTaskDurationUnitInsertInput
}

input TourStopUpdateInput {
  actualTimeOfDeparture_unset: Boolean
  estimatedTimeOfArrival_unset: Boolean
  tasks_unset: Boolean
  estimatedTimeOfDeparture_unset: Boolean
  pickup: TourStopPickupUpdateInput
  delivery: TourStopDeliveryUpdateInput
  geo_unset: Boolean
  duration: QuantityUpdateInput
  pickup_unset: Boolean
  order_inc: Int
  order_unset: Boolean
  estimatedTimeOfArrival: DateTime
  estimatedTimeOfDeparture: DateTime
  actualTimeOfArrival_unset: Boolean
  place_unset: Boolean
  name_unset: Boolean
  geo: TourStopGeoUpdateInput
  actualTimeOfArrival: DateTime
  name: String
  actualTimeOfDeparture: DateTime
  order: Int
  duration_unset: Boolean
  delivery_unset: Boolean
  place: ObjectId
  tasks: [TourStopTaskUpdateInput]
}

input WorkspaceMarketplaceQueryInput {
  OR: [WorkspaceMarketplaceQueryInput!]
  key_lt: String
  key_nin: [String]
  key_gte: String
  key_in: [String]
  key_lte: String
  key: String
  key_gt: String
  key_exists: Boolean
  key_ne: String
  AND: [WorkspaceMarketplaceQueryInput!]
}

input PriceQueryInput {
  value_lt: Float
  value_in: [Float]
  value_gt: Float
  currency: CurrencyRefQueryInput
  currency_exists: Boolean
  value_exists: Boolean
  value_lte: Float
  AND: [PriceQueryInput!]
  OR: [PriceQueryInput!]
  value: Float
  value_gte: Float
  value_nin: [Float]
  value_ne: Float
}

input ConsolidateInputDatumOrderSellerSupplier {
  ids: [String]
}

input ProductAllergenListUpdateInput {
  allergen: CodeRefUpdateInput
  allergen_unset: Boolean
  levelOfContainment: CodeRefUpdateInput
  levelOfContainment_unset: Boolean
}

input TourDraftOptimisationInsertInput {
  status: String
}

input CodeTranslationEnQueryInput {
  name_ne: String
  name_lte: String
  name_in: [String]
  name: String
  name_nin: [String]
  name_gt: String
  name_lt: String
  name_gte: String
  name_exists: Boolean
  AND: [CodeTranslationEnQueryInput!]
  OR: [CodeTranslationEnQueryInput!]
}

input OrderBrokerQueryInput {
  marketplace_in: [ObjectId]
  marketplace_lte: ObjectId
  marketplace_nin: [ObjectId]
  marketplace_ne: ObjectId
  marketplace_gte: ObjectId
  workspace_exists: Boolean
  OR: [OrderBrokerQueryInput!]
  name_in: [String]
  workspace: WorkspaceQueryInput
  name_gt: String
  name_exists: Boolean
  name_nin: [String]
  marketplace_exists: Boolean
  name_ne: String
  name_lte: String
  marketplace_lt: ObjectId
  marketplace: ObjectId
  marketplace_gt: ObjectId
  name: String
  AND: [OrderBrokerQueryInput!]
  name_gte: String
  name_lt: String
}

type TourStopDelivery {
  shipments: [ObjectId]
}

input ShipmentPickupPlaceRelationInput {
  create: PlaceInsertInput
  link: ObjectId
}

type Place {
  _id: ObjectId
  address: Address
  center: Geometry
  code: String
  geo: Geometry
  gln: String
  ids: [String]
  name: String
  owner: ActorRef
  types: [String]
  withinAreas: [ObjectId]
}

input UnitRefInsertInput {
  code: String
  symbol: String
}

input UnitRefUpdateInput {
  code_unset: Boolean
  symbol: String
  symbol_unset: Boolean
  code: String
}

input TourStopTaskDurationUnitInsertInput {
  symbol: String
}

input ConsolidateInputDatumSalesSessionOwner {
  workspace: ConsolidateInputDatumSalesSessionOwnerWorkspace
}

input ConsolidateInputDatumProductGrossWeightUnit {
  code: String
}

type TourLegOrigin {
  place: ObjectId
}

enum CustomerSortByInput {
  NAME_ASC
  NAME_DESC
  UPDATEDAT_ASC
  UPDATEDAT_DESC
  _ID_ASC
  _ID_DESC
  CREATEDAT_ASC
  CREATEDAT_DESC
}

input TransactionChannelExternalTargetEnterpriseUpdateInput {
  id: String
  id_unset: Boolean
}

type Tour {
  _id: ObjectId
  createdAt: DateTime
  date: DateTime
  distance: Quantity
  duration: Quantity
  legs: [TourLeg]
  name: String
  owner: ActorRef
  shipments: [Shipment]
  stops: [TourStop]
  vehicle: Vehicle
}

enum CodeListSortByInput {
  _ID_DESC
  KEY_ASC
  KEY_DESC
  NAME_ASC
  NAME_DESC
  _ID_ASC
}

input ConsolidateInputDatumPlace {
  address: ConsolidateInputDatumPlaceAddress
  ids: [String]
  name: String
  private: Boolean
  services: [String]
}

input TourDraftValidationInsertInput {
  status: String
}

input ConsolidateInputDatumCatalogOwnerWorkspace {
  ids: [String]
}

type Workspace {
  _id: ObjectId
  address: Address
  coconut: WorkspaceCoconut
  enterprise: WorkspaceEnterprise
  geo: Geometry
  ids: [String]
  key: String
  marketplace: WorkspaceMarketplace
  name: String
  person: ObjectId
  place: Place
  taxId: String
  type: String
  vatId: String
}

type TourStopTask {
  duration: TourStopTaskDuration
  name: String
  shipments: [ObjectId]
}

type Offer {
  _id: ObjectId
  createdAt: DateTime
  ids: [String]
  owner: ActorRef
  price: Price
  product: Product
  quantity: Quantity
  updatedAt: DateTime
}

input WorkspaceCoconutSlackChannelInsertInput {
  id: String
}

input ProductCategoryChildrenRelationInput {
  create: [ProductCategoryInsertInput]
  link: [ObjectId]
}

input WorkspaceMarketplaceUpdateInput {
  key: String
  key_unset: Boolean
}

input ShippingMethodPickupInsertInput {
  points: [ShippingMethodPickupPointInsertInput]
}

input CodeTranslationUpdateInput {
  fr: CodeTranslationFrUpdateInput
  fr_unset: Boolean
  nl: CodeTranslationNlUpdateInput
  nl_unset: Boolean
  de: CodeTranslationDeUpdateInput
  de_unset: Boolean
  en: CodeTranslationEnUpdateInput
  en_unset: Boolean
}

input CustomerQueryInput {
  _id_gte: ObjectId
  updatedAt_ne: DateTime
  name_nin: [String]
  updatedAt_gt: DateTime
  _id_lt: ObjectId
  _id_lte: ObjectId
  updatedAt_lte: DateTime
  places_in: [PlaceQueryInput]
  name_in: [String]
  ids_nin: [String]
  _id_gt: ObjectId
  name_gt: String
  name_ne: String
  createdAt_gte: DateTime
  name_lt: String
  owner: ActorRefQueryInput
  createdAt_in: [DateTime]
  createdAt_lt: DateTime
  createdAt_exists: Boolean
  ids: [String]
  ids_exists: Boolean
  places: [PlaceQueryInput]
  _id_exists: Boolean
  updatedAt_in: [DateTime]
  _id_in: [ObjectId]
  _id_ne: ObjectId
  name: String
  updatedAt_exists: Boolean
  name_lte: String
  updatedAt_gte: DateTime
  updatedAt_lt: DateTime
  places_nin: [PlaceQueryInput]
  name_exists: Boolean
  AND: [CustomerQueryInput!]
  createdAt: DateTime
  updatedAt: DateTime
  OR: [CustomerQueryInput!]
  _id: ObjectId
  createdAt_ne: DateTime
  ids_in: [String]
  createdAt_nin: [DateTime]
  updatedAt_nin: [DateTime]
  createdAt_gt: DateTime
  owner_exists: Boolean
  _id_nin: [ObjectId]
  createdAt_lte: DateTime
  places_exists: Boolean
  name_gte: String
}

input CodeTranslationFrInsertInput {
  name: String
}

input OrderLineOfferInsertInput {
  _id: ObjectId
}

input ActorRefUpdateInput {
  workspace: ActorRefWorkspaceRelationInput
  workspace_unset: Boolean
}

input ActorRefWorkspaceRelationInput {
  create: WorkspaceInsertInput
  link: ObjectId
}

input ConsolidateInputDatumOrderBuyerCustomer {
  ids: [String]
}

type TransactionChannelInternalTarget {
  workspace: Workspace
}

input TourStopTaskDurationUnitQueryInput {
  symbol_lte: String
  symbol_in: [String]
  symbol_nin: [String]
  symbol_gte: String
  symbol_exists: Boolean
  symbol_gt: String
  symbol_lt: String
  AND: [TourStopTaskDurationUnitQueryInput!]
  OR: [TourStopTaskDurationUnitQueryInput!]
  symbol: String
  symbol_ne: String
}

enum LocationSortByInput {
  PLACE_ASC
  PLACE_DESC
  TYPE_ASC
  TYPE_DESC
  _ID_ASC
  _ID_DESC
}

enum SalesSessionSortByInput {
  CREATEDAT_DESC
  UPDATEDAT_ASC
  UPDATEDAT_DESC
  _ID_ASC
  _ID_DESC
  CREATEDAT_ASC
}

input CodeTranslationDeInsertInput {
  name: String
}

input TransactionChannelExternalTargetMarketplaceInsertInput {
  key: String
}

input ConsolidateInputDatumShippingMethodPickupPlace {
  ids: [String]
}

input CodeTranslationFrQueryInput {
  name_exists: Boolean
  OR: [CodeTranslationFrQueryInput!]
  name: String
  name_lte: String
  name_in: [String]
  name_nin: [String]
  name_ne: String
  name_gte: String
  AND: [CodeTranslationFrQueryInput!]
  name_gt: String
  name_lt: String
}

type VehicleCostResource {
  currency: VehicleCostResourceCurrency
  key: String
  type: String
  unit: UnitRef
}

type DeleteManyPayload {
  deletedCount: Int!
}

type ConsolidationStrategyProfileUnlessFilter {
  isRoot: Boolean
  regex: String
}

input ShipmentUpdateInput {
  date: DateTime
  weight: QuantityUpdateInput
  carrier: ActorRefUpdateInput
  lines_unset: Boolean
  date_unset: Boolean
  method: ShipmentMethodRelationInput
  key_unset: Boolean
  method_unset: Boolean
  order_unset: Boolean
  order: ShipmentOrderRelationInput
  createdAt: DateTime
  _id: ObjectId
  createdAt_unset: Boolean
  delivery_unset: Boolean
  pickup_unset: Boolean
  pickup: ShipmentPickupUpdateInput
  delivery: ShipmentDeliveryUpdateInput
  carrier_unset: Boolean
  lines: [ShipmentLineUpdateInput]
  key: String
  weight_unset: Boolean
  _id_unset: Boolean
}

enum CodeSortByInput {
  KEY_DESC
  LISTKEY_DESC
  SEQUENCE_ASC
  SYMBOL_ASC
  _ID_DESC
  KEY_ASC
  LIST_ASC
  LIST_DESC
  LISTKEY_ASC
  NAME_DESC
  SYMBOL_DESC
  _ID_ASC
  NAME_ASC
  SEQUENCE_DESC
}

input ProductQuantityUnitUpdateInput {
  text_unset: Boolean
  text: String
}

input ConsolidationStrategyQueryInput {
  _id_ne: ObjectId
  key: String
  OR: [ConsolidationStrategyQueryInput!]
  _id_gt: ObjectId
  _id_lt: ObjectId
  key_in: [String]
  key_gte: String
  key_ne: String
  profiles_nin: [ConsolidationStrategyProfileQueryInput]
  key_lt: String
  rules_nin: [ConsolidationStrategyRuleQueryInput]
  rules_exists: Boolean
  profiles_exists: Boolean
  AND: [ConsolidationStrategyQueryInput!]
  profiles: [ConsolidationStrategyProfileQueryInput]
  key_gt: String
  key_nin: [String]
  profiles_in: [ConsolidationStrategyProfileQueryInput]
  key_lte: String
  _id_exists: Boolean
  _id_lte: ObjectId
  rules: [ConsolidationStrategyRuleQueryInput]
  _id: ObjectId
  _id_nin: [ObjectId]
  rules_in: [ConsolidationStrategyRuleQueryInput]
  _id_gte: ObjectId
  key_exists: Boolean
  _id_in: [ObjectId]
}

input TourDraftTourRelationInput {
  create: TourInsertInput
  link: ObjectId
}

input ConsolidateInputDatumProductNetVolume {
  unit: ConsolidateInputDatumProductNetVolumeUnit
  value: Float
}

input TourLegDestinationUpdateInput {
  place: ObjectId
  place_unset: Boolean
}

input WorkspaceEnterpriseUpdateInput {
  vatId_unset: Boolean
  ids: [String]
  ids_unset: Boolean
  name: String
  name_unset: Boolean
  vatId: String
}

input ConsolidateInputDatumProductProducer {
  workspace: ConsolidateInputDatumProductProducerWorkspace
}

input VehicleCompartmentUpdateInput {
  capacity: StorageCapacityUpdateInput
  capacity_unset: Boolean
  features: [VehicleCompartmentFeatureUpdateInput]
  features_unset: Boolean
  name: String
  name_unset: Boolean
}

type CodeTranslationDe {
  name: String
}

input OrderSellerInsertInput {
  workspace: OrderSellerWorkspaceRelationInput
  supplier: OrderSellerSupplierRelationInput
  name: String
}

input CodeTranslationDeUpdateInput {
  name: String
  name_unset: Boolean
}

input OrderLineProductUpdateInput {
  _id_unset: Boolean
  _id: ObjectId
}

input TransactionChannelExternalTargetEnterpriseQueryInput {
  id_lt: String
  id_gt: String
  OR: [TransactionChannelExternalTargetEnterpriseQueryInput!]
  id: String
  id_gte: String
  id_nin: [String]
  id_ne: String
  AND: [TransactionChannelExternalTargetEnterpriseQueryInput!]
  id_in: [String]
  id_exists: Boolean
  id_lte: String
}

enum PlaceSortByInput {
  GLN_ASC
  GLN_DESC
  NAME_ASC
  NAME_DESC
  _ID_ASC
  _ID_DESC
  CODE_ASC
  CODE_DESC
}

input ConsolidationStrategyInsertInput {
  rules: [ConsolidationStrategyRuleInsertInput]
  _id: ObjectId
  key: String
  profiles: [ConsolidationStrategyProfileInsertInput]
}

input ProductCategoryInsertInput {
  children: ProductCategoryChildrenRelationInput
  classification: ProductCategoryClassificationRelationInput
  hierarchyLevel: Int
  id: String
  code: String
  name: String
  _id: ObjectId
  ids: [String]
}

input TourStopDeliveryInsertInput {
  shipments: [ObjectId]
}

input ProductAllergenListInsertInput {
  allergen: CodeRefInsertInput
  levelOfContainment: CodeRefInsertInput
}

input OrderBrokerUpdateInput {
  workspace: OrderBrokerWorkspaceRelationInput
  workspace_unset: Boolean
  marketplace: ObjectId
  marketplace_unset: Boolean
  name: String
  name_unset: Boolean
}

input ConsolidateInputDatumCatalogOwner {
  workspace: ConsolidateInputDatumCatalogOwnerWorkspace
}

type TransactionChannel {
  _id: ObjectId
  direction: String
  externalTarget: TransactionChannelExternalTarget
  filter: TransactionChannelFilter
  internalTarget: TransactionChannelInternalTarget
  resource: String
  role: String
}

input OrderBuyerQueryInput {
  name_gt: String
  AND: [OrderBuyerQueryInput!]
  OR: [OrderBuyerQueryInput!]
  workspace_gte: ObjectId
  phone_lte: String
  workspace_ne: ObjectId
  name_ne: String
  email_nin: [String]
  workspace: ObjectId
  phone_gte: String
  workspace_lte: ObjectId
  name: String
  person_gte: ObjectId
  phone_in: [String]
  email_gte: String
  phone_gt: String
  person_nin: [ObjectId]
  phone_ne: String
  name_in: [String]
  person_lte: ObjectId
  phone_exists: Boolean
  workspace_in: [ObjectId]
  customer_exists: Boolean
  email_gt: String
  email_in: [String]
  name_nin: [String]
  customer: CustomerQueryInput
  name_lte: String
  workspace_exists: Boolean
  email_ne: String
  name_exists: Boolean
  phone_nin: [String]
  name_gte: String
  phone: String
  email_lt: String
  email: String
  workspace_gt: ObjectId
  email_lte: String
  person: ObjectId
  person_ne: ObjectId
  person_gt: ObjectId
  person_lt: ObjectId
  workspace_lt: ObjectId
  person_in: [ObjectId]
  name_lt: String
  email_exists: Boolean
  workspace_nin: [ObjectId]
  phone_lt: String
  person_exists: Boolean
}

type ShippingMethod {
  _id: ObjectId
  description: String
  ids: [String]
  name: String
  owner: ActorRef
  pickup: ShippingMethodPickup
  type: String
}

input WorkspaceCoconutSlackChannelUpdateInput {
  id: String
  id_unset: Boolean
}

input TransactionChannelFilterInsertInput {
  isOrdered: Boolean
  status: String
}

input ConsolidationStrategyProfileUnlessUpdateInput {
  action: String
  action_unset: Boolean
  filter: ConsolidationStrategyProfileUnlessFilterUpdateInput
  filter_unset: Boolean
}

type TourStop {
  actualTimeOfArrival: DateTime
  actualTimeOfDeparture: DateTime
  delivery: TourStopDelivery
  duration: Quantity
  estimatedTimeOfArrival: DateTime
  estimatedTimeOfDeparture: DateTime
  geo: TourStopGeo
  name: String
  order: Int
  pickup: TourStopPickup
  place: ObjectId
  tasks: [TourStopTask]
}

input OrderInsertInput {
  date: DateTime
  totalPrice: PriceInsertInput
  number: String
  updatedAt: DateTime
  seller: OrderSellerInsertInput
  salesSession: OrderSalesSessionRelationInput
  _id: ObjectId
  lines: [OrderLineInsertInput]
  confirmed: Boolean
  shippingAddress: AddressInsertInput
  createdAt: DateTime
  url: String
  broker: OrderBrokerInsertInput
  shippingMethod: OrderShippingMethodRelationInput
  buyer: OrderBuyerInsertInput
}

input TourStopGeoInsertInput {
  coordinates: [Float]
  type: String
}

type VehicleCost {
  driver: VehicleCostDriver
  resource: VehicleCostResource
  unit: UnitRef
  value: Float
}

input ShipmentInsertInput {
  lines: [ShipmentLineInsertInput]
  _id: ObjectId
  order: ShipmentOrderRelationInput
  date: DateTime
  key: String
  pickup: ShipmentPickupInsertInput
  createdAt: DateTime
  delivery: ShipmentDeliveryInsertInput
  weight: QuantityInsertInput
  carrier: ActorRefInsertInput
  method: ShipmentMethodRelationInput
}

input CatalogItemProductRelationInput {
  create: ProductInsertInput
  link: ObjectId
}

type ProductAllergenList {
  allergen: CodeRef
  levelOfContainment: CodeRef
}

type OrderBroker {
  marketplace: ObjectId
  name: String
  workspace: Workspace
}

type OrderLineItem {
  _id: ObjectId
}

input ProductIngredientListQuantityQueryInput {
  percentage_lt: Float
  percentage_nin: [Float]
  percentage: Float
  percentage_gt: Float
  percentage_gte: Float
  AND: [ProductIngredientListQuantityQueryInput!]
  percentage_ne: Float
  OR: [ProductIngredientListQuantityQueryInput!]
  percentage_lte: Float
  percentage_in: [Float]
  percentage_exists: Boolean
}

input ConsolidateInputDatumOfferOwner {
  workspace: ConsolidateInputDatumOfferOwnerWorkspace
}

type Location {
  _id: ObjectId
  place: Place
  type: String
}

input CatalogItemUpdateInput {
  inventoryItems_unset: Boolean
  name: String
  owner: ActorRefUpdateInput
  catalog: CatalogItemCatalogRelationInput
  product_unset: Boolean
  offers: CatalogItemOffersRelationInput
  sku: String
  catalog_unset: Boolean
  ids_unset: Boolean
  ids: [String]
  inventoryItems: CatalogItemInventoryItemsRelationInput
  categories_unset: Boolean
  _id_unset: Boolean
  owner_unset: Boolean
  _id: ObjectId
  categories: [ObjectId]
  offers_unset: Boolean
  createdAt: DateTime
  createdAt_unset: Boolean
  product: CatalogItemProductRelationInput
  name_unset: Boolean
  sku_unset: Boolean
}

type VehicleFeature {
  key: String
  name: String
}

input ProductNutrientListInsertInput {
  dailyValueIntakePercent: Float
  nutrient: CodeRefInsertInput
  quantity: QuantityInsertInput
}

input AddressQueryInput {
  name_in: [String]
  street_lte: String
  place_gte: ObjectId
  OR: [AddressQueryInput!]
  name_nin: [String]
  postalCode: String
  postalCode_lte: String
  name_gte: String
  AND: [AddressQueryInput!]
  street_gte: String
  country_exists: Boolean
  country_ne: String
  country_gte: String
  phone_exists: Boolean
  locality: String
  phone_lte: String
  locality_lte: String
  place_in: [ObjectId]
  postalCode_in: [String]
  street_nin: [String]
  place_gt: ObjectId
  country: String
  name: String
  phone_gt: String
  postalCode_gt: String
  name_gt: String
  street_gt: String
  locality_lt: String
  phone_lt: String
  street_exists: Boolean
  street_in: [String]
  street: String
  locality_gt: String
  country_nin: [String]
  name_lt: String
  place_exists: Boolean
  country_lte: String
  country_in: [String]
  postalCode_exists: Boolean
  postalCode_nin: [String]
  geo: GeometryQueryInput
  phone_ne: String
  geo_exists: Boolean
  place_lt: ObjectId
  name_ne: String
  place_nin: [ObjectId]
  country_lt: String
  place: ObjectId
  phone_in: [String]
  place_ne: ObjectId
  place_lte: ObjectId
  phone_gte: String
  phone_nin: [String]
  name_exists: Boolean
  country_gt: String
  locality_in: [String]
  phone: String
  postalCode_gte: String
  locality_nin: [String]
  locality_exists: Boolean
  postalCode_lt: String
  locality_gte: String
  name_lte: String
  postalCode_ne: String
  street_lt: String
  street_ne: String
  locality_ne: String
}

input VehicleCompartmentQueryInput {
  capacity_exists: Boolean
  name_nin: [String]
  OR: [VehicleCompartmentQueryInput!]
  features_exists: Boolean
  features: [VehicleCompartmentFeatureQueryInput]
  features_nin: [VehicleCompartmentFeatureQueryInput]
  name_exists: Boolean
  name_lte: String
  AND: [VehicleCompartmentQueryInput!]
  name_lt: String
  name_in: [String]
  name_gt: String
  name_gte: String
  features_in: [VehicleCompartmentFeatureQueryInput]
  name_ne: String
  capacity: StorageCapacityQueryInput
  name: String
}

input CodeTranslationQueryInput {
  en_exists: Boolean
  AND: [CodeTranslationQueryInput!]
  fr: CodeTranslationFrQueryInput
  fr_exists: Boolean
  de: CodeTranslationDeQueryInput
  de_exists: Boolean
  en: CodeTranslationEnQueryInput
  OR: [CodeTranslationQueryInput!]
  nl: CodeTranslationNlQueryInput
  nl_exists: Boolean
}

type VehicleCompartmentFeature {
  key: String
  name: String
}

input ConsolidateInput {
  strategyKey: String
  data: ConsolidateInputDatum
}

type ShippingMethodPickup {
  points: [ShippingMethodPickupPoint]
}

input ShipmentDeliveryInsertInput {
  place: ShipmentDeliveryPlaceRelationInput
  postalCode: String
  street: String
  country: String
  locality: String
  name: String
  phone: String
}

input TransactionChannelInternalTargetQueryInput {
  OR: [TransactionChannelInternalTargetQueryInput!]
  AND: [TransactionChannelInternalTargetQueryInput!]
  workspace: WorkspaceQueryInput
  workspace_exists: Boolean
}

input VehicleCostResourceQueryInput {
  unit_exists: Boolean
  OR: [VehicleCostResourceQueryInput!]
  type_nin: [String]
  key_lt: String
  type_lte: String
  type_lt: String
  key: String
  key_lte: String
  type_gt: String
  unit: UnitRefQueryInput
  key_gt: String
  key_ne: String
  type_gte: String
  key_exists: Boolean
  type: String
  currency: VehicleCostResourceCurrencyQueryInput
  key_nin: [String]
  key_gte: String
  type_in: [String]
  type_ne: String
  type_exists: Boolean
  AND: [VehicleCostResourceQueryInput!]
  currency_exists: Boolean
  key_in: [String]
}

enum TourDraftSortByInput {
  _ID_ASC
  _ID_DESC
  TOUR_ASC
  TOUR_DESC
  VEHICLE_ASC
  VEHICLE_DESC
}

input ConsolidateInputDatumProductGroup {
  ids: [String]
  name: String
  producer: ConsolidateInputDatumProductGroupProducer
}

input VehicleFeatureUpdateInput {
  key: String
  key_unset: Boolean
  name: String
  name_unset: Boolean
}

input TourDraftOptimisationUpdateInput {
  status: String
  status_unset: Boolean
}

input TourUpdateInput {
  stops_unset: Boolean
  owner: ActorRefUpdateInput
  owner_unset: Boolean
  duration_unset: Boolean
  vehicle: TourVehicleRelationInput
  duration: QuantityUpdateInput
  date: DateTime
  distance: QuantityUpdateInput
  name: String
  createdAt_unset: Boolean
  distance_unset: Boolean
  _id_unset: Boolean
  legs: [TourLegUpdateInput]
  shipments_unset: Boolean
  name_unset: Boolean
  stops: [TourStopUpdateInput]
  legs_unset: Boolean
  _id: ObjectId
  createdAt: DateTime
  shipments: TourShipmentsRelationInput
  vehicle_unset: Boolean
  date_unset: Boolean
}

input ProductIngredientListIngredientUpdateInput {
  name_unset: Boolean
  name: String
}

input VehicleBrandInsertInput {
  name: String
}

input ConsolidateInputDatumShippingMethodOwner {
  workspace: ConsolidateInputDatumShippingMethodOwnerWorkspace
}

input TransactionChannelExternalTargetQueryInput {
  AND: [TransactionChannelExternalTargetQueryInput!]
  OR: [TransactionChannelExternalTargetQueryInput!]
  enterprise: TransactionChannelExternalTargetEnterpriseQueryInput
  enterprise_exists: Boolean
  marketplace: TransactionChannelExternalTargetMarketplaceQueryInput
  marketplace_exists: Boolean
  platform: TransactionChannelExternalTargetPlatformQueryInput
  platform_exists: Boolean
}

type WorkspaceEnterprise {
  ids: [String]
  name: String
  vatId: String
}

type Customer {
  _id: ObjectId
  createdAt: DateTime
  ids: [String]
  name: String
  owner: ActorRef
  places: [Place]
  updatedAt: DateTime
}

input ProductIngredientListIngredientInsertInput {
  name: String
}

type Order {
  _id: ObjectId
  broker: OrderBroker
  buyer: OrderBuyer
  confirmed: Boolean
  createdAt: DateTime
  date: DateTime
  lines: [OrderLine]
  number: String
  salesSession: SalesSession
  seller: OrderSeller
  shippingAddress: Address
  shippingMethod: ShippingMethod
  totalPrice: Price
  updatedAt: DateTime
  url: String
}

type TourStopTaskDuration {
  unit: TourStopTaskDurationUnit
  value: Float
}

input CodeListRelationInput {
  create: CodeListInsertInput
  link: ObjectId
}

type CodeTranslationFr {
  name: String
}

input CodeInsertInput {
  name: String
  translations: CodeTranslationInsertInput
  symbol: String
  ids: [String]
  _id: ObjectId
  key: String
  list: CodeListRelationInput
  listKey: String
  sequence: String
}

input TourLegPayloadInsertInput {
  shipments: [ObjectId]
  volume: QuantityInsertInput
  weight: QuantityInsertInput
}

input OrderBrokerInsertInput {
  marketplace: ObjectId
  name: String
  workspace: OrderBrokerWorkspaceRelationInput
}

input TourStopPickupInsertInput {
  shipments: [ObjectId]
}

input WorkspaceCoconutUpdateInput {
  slackChannel: WorkspaceCoconutSlackChannelUpdateInput
  slackChannel_unset: Boolean
}

input OrderQueryInput {
  _id_lt: ObjectId
  date_ne: DateTime
  salesSession_exists: Boolean
  date_gte: DateTime
  confirmed: Boolean
  AND: [OrderQueryInput!]
  createdAt: DateTime
  updatedAt: DateTime
  date_lte: DateTime
  updatedAt_lt: DateTime
  broker_exists: Boolean
  date_exists: Boolean
  lines_exists: Boolean
  number_lte: String
  updatedAt_gt: DateTime
  seller_exists: Boolean
  _id_gte: ObjectId
  date_in: [DateTime]
  number_in: [String]
  createdAt_exists: Boolean
  _id_lte: ObjectId
  shippingAddress: AddressQueryInput
  _id_in: [ObjectId]
  OR: [OrderQueryInput!]
  lines_nin: [OrderLineQueryInput]
  buyer: OrderBuyerQueryInput
  shippingMethod: ShippingMethodQueryInput
  number_nin: [String]
  updatedAt_gte: DateTime
  _id_ne: ObjectId
  _id: ObjectId
  url_ne: String
  _id_nin: [ObjectId]
  broker: OrderBrokerQueryInput
  url_lte: String
  url_in: [String]
  createdAt_lte: DateTime
  confirmed_ne: Boolean
  buyer_exists: Boolean
  number: String
  confirmed_exists: Boolean
  number_ne: String
  url_nin: [String]
  createdAt_ne: DateTime
  date_lt: DateTime
  url_lt: String
  seller: OrderSellerQueryInput
  updatedAt_lte: DateTime
  url_gte: String
  number_gt: String
  number_lt: String
  date: DateTime
  createdAt_in: [DateTime]
  url_gt: String
  url: String
  totalPrice: PriceQueryInput
  _id_exists: Boolean
  updatedAt_nin: [DateTime]
  _id_gt: ObjectId
  createdAt_lt: DateTime
  createdAt_gte: DateTime
  date_gt: DateTime
  number_gte: String
  number_exists: Boolean
  salesSession: SalesSessionQueryInput
  shippingMethod_exists: Boolean
  shippingAddress_exists: Boolean
  createdAt_nin: [DateTime]
  lines: [OrderLineQueryInput]
  updatedAt_exists: Boolean
  updatedAt_ne: DateTime
  createdAt_gt: DateTime
  url_exists: Boolean
  lines_in: [OrderLineQueryInput]
  date_nin: [DateTime]
  updatedAt_in: [DateTime]
  totalPrice_exists: Boolean
}

type ConsolidationStrategy {
  _id: ObjectId
  key: String
  profiles: [ConsolidationStrategyProfile]
  rules: [ConsolidationStrategyRule]
}

input ProductCategoriesRelationInput {
  create: [ProductCategoryInsertInput]
  link: [ObjectId]
}

input TransactionChannelExternalTargetMarketplaceUpdateInput {
  key: String
  key_unset: Boolean
}

type ProductImage {
  url: String
}

type OrderLineOffer {
  _id: ObjectId
}

enum CatalogSortByInput {
  _ID_ASC
  _ID_DESC
  ENTERPRISE_ASC
  ENTERPRISE_DESC
}

input ProductCategoryClassificationRelationInput {
  create: ProductClassificationInsertInput
  link: ObjectId
}

input CodeRefInsertInput {
  code: String
  key: String
}

input PlaceQueryInput {
  owner: ActorRefQueryInput
  name_gte: String
  name_exists: Boolean
  withinAreas_in: [ObjectId]
  gln_nin: [String]
  gln_in: [String]
  _id_gte: ObjectId
  name_gt: String
  ids_in: [String]
  gln_exists: Boolean
  address: AddressQueryInput
  ids: [String]
  gln_lte: String
  types_in: [String]
  code_in: [String]
  name_lte: String
  withinAreas: [ObjectId]
  _id_gt: ObjectId
  AND: [PlaceQueryInput!]
  gln_gt: String
  types: [String]
  gln_lt: String
  code_lte: String
  name_nin: [String]
  geo_exists: Boolean
  _id_lte: ObjectId
  OR: [PlaceQueryInput!]
  name_ne: String
  _id_nin: [ObjectId]
  gln_gte: String
  name_in: [String]
  code_gte: String
  types_exists: Boolean
  withinAreas_exists: Boolean
  owner_exists: Boolean
  _id_exists: Boolean
  code_nin: [String]
  types_nin: [String]
  code_gt: String
  _id: ObjectId
  center: GeometryQueryInput
  address_exists: Boolean
  geo: GeometryQueryInput
  gln_ne: String
  code_ne: String
  gln: String
  _id_ne: ObjectId
  name_lt: String
  ids_exists: Boolean
  code_lt: String
  ids_nin: [String]
  _id_lt: ObjectId
  center_exists: Boolean
  name: String
  withinAreas_nin: [ObjectId]
  code: String
  _id_in: [ObjectId]
  code_exists: Boolean
}

input TourLegOriginQueryInput {
  place_exists: Boolean
  place_lte: ObjectId
  place_gt: ObjectId
  place_lt: ObjectId
  place_in: [ObjectId]
  place_nin: [ObjectId]
  AND: [TourLegOriginQueryInput!]
  place_gte: ObjectId
  place_ne: ObjectId
  OR: [TourLegOriginQueryInput!]
  place: ObjectId
}

input WorkspaceEnterpriseInsertInput {
  ids: [String]
  name: String
  vatId: String
}

input TourDraftVehicleRelationInput {
  create: VehicleInsertInput
  link: ObjectId
}

input ConsolidationStrategyProfileInsertInput {
  action: String
  key: String
  unless: [ConsolidationStrategyProfileUnlessInsertInput]
}

input ConsolidateInputDatumProductIngredientListIngredient {
  name: String
}

input WorkspaceCoconutQueryInput {
  slackChannel: WorkspaceCoconutSlackChannelQueryInput
  slackChannel_exists: Boolean
  AND: [WorkspaceCoconutQueryInput!]
  OR: [WorkspaceCoconutQueryInput!]
}

input TourStopTaskQueryInput {
  name_gte: String
  name_exists: Boolean
  AND: [TourStopTaskQueryInput!]
  name_gt: String
  shipments_nin: [ObjectId]
  OR: [TourStopTaskQueryInput!]
  name_ne: String
  shipments: [ObjectId]
  name_nin: [String]
  name_in: [String]
  duration_exists: Boolean
  name_lte: String
  shipments_exists: Boolean
  name: String
  duration: TourStopTaskDurationQueryInput
  name_lt: String
  shipments_in: [ObjectId]
}

input ActorRefInsertInput {
  workspace: ActorRefWorkspaceRelationInput
}

input TourDraftInsertInput {
  duration: QuantityInsertInput
  _id: ObjectId
  tour: TourDraftTourRelationInput
  validation: TourDraftValidationInsertInput
  distance: QuantityInsertInput
  optimisation: TourDraftOptimisationInsertInput
  owner: ActorRefInsertInput
  stops: [TourStopInsertInput]
  vehicle: TourDraftVehicleRelationInput
  shipments: TourDraftShipmentsRelationInput
}

input ConsolidateInputDatumOrderSalesSession {
  ids: [String]
}

input ProductCategoryQueryInput {
  code_ne: String
  hierarchyLevel_lt: Int
  ids_in: [String]
  name_lt: String
  id_gt: String
  _id_in: [ObjectId]
  _id_nin: [ObjectId]
  hierarchyLevel_exists: Boolean
  AND: [ProductCategoryQueryInput!]
  code_lte: String
  name_lte: String
  classification: ProductClassificationQueryInput
  code_lt: String
  _id_gte: ObjectId
  hierarchyLevel_ne: Int
  code_exists: Boolean
  code_gt: String
  hierarchyLevel_gt: Int
  name_nin: [String]
  name_exists: Boolean
  classification_exists: Boolean
  _id_lt: ObjectId
  id_in: [String]
  _id_lte: ObjectId
  code_in: [String]
  id: String
  id_gte: String
  _id_gt: ObjectId
  hierarchyLevel_nin: [Int]
  hierarchyLevel_lte: Int
  children_exists: Boolean
  code_nin: [String]
  code_gte: String
  name_in: [String]
  code: String
  id_lt: String
  hierarchyLevel: Int
  children_nin: [ProductCategoryQueryInput]
  ids_nin: [String]
  id_ne: String
  id_lte: String
  name_ne: String
  name_gt: String
  _id_exists: Boolean
  children_in: [ProductCategoryQueryInput]
  hierarchyLevel_in: [Int]
  _id_ne: ObjectId
  hierarchyLevel_gte: Int
  OR: [ProductCategoryQueryInput!]
  id_nin: [String]
  ids: [String]
  ids_exists: Boolean
  id_exists: Boolean
  name_gte: String
  _id: ObjectId
  children: [ProductCategoryQueryInput]
  name: String
}

input CurrencyRefQueryInput {
  symbol_nin: [String]
  symbol_ne: String
  code_lte: String
  symbol_gt: String
  symbol: String
  code_exists: Boolean
  symbol_lt: String
  code_gte: String
  code: String
  symbol_in: [String]
  code_lt: String
  code_nin: [String]
  code_gt: String
  code_in: [String]
  symbol_lte: String
  AND: [CurrencyRefQueryInput!]
  code_ne: String
  symbol_exists: Boolean
  symbol_gte: String
  OR: [CurrencyRefQueryInput!]
}

input TourStopPickupUpdateInput {
  shipments_unset: Boolean
  shipments: [ObjectId]
}

input TransactionChannelUpdateInput {
  role: String
  externalTarget: TransactionChannelExternalTargetUpdateInput
  role_unset: Boolean
  resource: String
  internalTarget_unset: Boolean
  direction: String
  resource_unset: Boolean
  direction_unset: Boolean
  externalTarget_unset: Boolean
  filter_unset: Boolean
  _id: ObjectId
  filter: TransactionChannelFilterUpdateInput
  internalTarget: TransactionChannelInternalTargetUpdateInput
  _id_unset: Boolean
}

input VehicleModelQueryInput {
  date_lte: DateTime
  date_in: [DateTime]
  date_gt: DateTime
  name: String
  OR: [VehicleModelQueryInput!]
  date_exists: Boolean
  date_lt: DateTime
  name_nin: [String]
  name_lt: String
  name_exists: Boolean
  name_gt: String
  date_ne: DateTime
  date_gte: DateTime
  date: DateTime
  date_nin: [DateTime]
  name_ne: String
  name_lte: String
  name_in: [String]
  AND: [VehicleModelQueryInput!]
  name_gte: String
}

input CatalogInsertInput {
  enterprise: ObjectId
  owner: ActorRefInsertInput
  locations: CatalogLocationsRelationInput
  _id: ObjectId
}

input TourLegOriginInsertInput {
  place: ObjectId
}

input TourLegInsertInput {
  distance: QuantityInsertInput
  duration: QuantityInsertInput
  origin: TourLegOriginInsertInput
  payload: TourLegPayloadInsertInput
  destination: TourLegDestinationInsertInput
}

input ConsolidateInputDatumCustomerOwner {
  workspace: ConsolidateInputDatumCustomerOwnerWorkspace
}

input AreaUpdateInput {
  withinAreas: [ObjectId]
  code: String
  name_unset: Boolean
  withinAreas_unset: Boolean
  name: String
  types_unset: Boolean
  code_unset: Boolean
  _id: ObjectId
  types: [String]
  _id_unset: Boolean
}

input ShipmentLineUpdateInput {
  weight_unset: Boolean
  name: String
  name_unset: Boolean
  product: ObjectId
  product_unset: Boolean
  quantity: QuantityUpdateInput
  quantity_unset: Boolean
  weight: QuantityUpdateInput
}

input CodeRefQueryInput {
  key_in: [String]
  key_lte: String
  key_ne: String
  code_ne: String
  code_nin: [String]
  OR: [CodeRefQueryInput!]
  key_gte: String
  code_in: [String]
  code: String
  key_exists: Boolean
  code_lt: String
  key: String
  code_gte: String
  code_exists: Boolean
  code_lte: String
  key_lt: String
  key_nin: [String]
  AND: [CodeRefQueryInput!]
  code_gt: String
  key_gt: String
}

type Shipment {
  _id: ObjectId
  carrier: ActorRef
  createdAt: DateTime
  date: DateTime
  delivery: ShipmentDelivery
  key: String
  lines: [ShipmentLine]
  method: ShippingMethod
  order: Order
  pickup: ShipmentPickup
  weight: Quantity
}

input AreaQueryInput {
  code_ne: String
  withinAreas_nin: [ObjectId]
  types_exists: Boolean
  withinAreas_in: [ObjectId]
  code_lte: String
  name_ne: String
  _id: ObjectId
  code: String
  code_exists: Boolean
  _id_gte: ObjectId
  code_lt: String
  name_lt: String
  types: [String]
  _id_nin: [ObjectId]
  name_gt: String
  withinAreas: [ObjectId]
  _id_lt: ObjectId
  code_gte: String
  _id_lte: ObjectId
  code_gt: String
  name_lte: String
  _id_exists: Boolean
  name_exists: Boolean
  name_nin: [String]
  name_in: [String]
  name_gte: String
  code_in: [String]
  types_nin: [String]
  OR: [AreaQueryInput!]
  name: String
  types_in: [String]
  _id_in: [ObjectId]
  _id_ne: ObjectId
  AND: [AreaQueryInput!]
  _id_gt: ObjectId
  withinAreas_exists: Boolean
  code_nin: [String]
}

type TourLegPayload {
  shipments: [ObjectId]
  volume: Quantity
  weight: Quantity
}

input VehicleCostInsertInput {
  driver: VehicleCostDriverInsertInput
  resource: VehicleCostResourceInsertInput
  unit: UnitRefInsertInput
  value: Float
}

input WorkspaceQueryInput {
  taxId_gte: String
  _id_ne: ObjectId
  person_lt: ObjectId
  _id_in: [ObjectId]
  name_lt: String
  name: String
  _id_lt: ObjectId
  taxId_gt: String
  person_lte: ObjectId
  ids_in: [String]
  OR: [WorkspaceQueryInput!]
  name_gt: String
  type_gt: String
  ids_nin: [String]
  place_exists: Boolean
  name_lte: String
  key_gte: String
  person_ne: ObjectId
  person_gt: ObjectId
  _id: ObjectId
  key_exists: Boolean
  taxId_lt: String
  taxId_ne: String
  vatId_in: [String]
  taxId_in: [String]
  type_exists: Boolean
  key_gt: String
  coconut_exists: Boolean
  vatId_gte: String
  person_exists: Boolean
  _id_gte: ObjectId
  vatId_gt: String
  vatId_ne: String
  ids_exists: Boolean
  address: AddressQueryInput
  ids: [String]
  taxId: String
  key_in: [String]
  type: String
  coconut: WorkspaceCoconutQueryInput
  vatId_nin: [String]
  key_lt: String
  taxId_nin: [String]
  name_in: [String]
  _id_lte: ObjectId
  geo_exists: Boolean
  key_nin: [String]
  name_exists: Boolean
  vatId_lte: String
  marketplace_exists: Boolean
  vatId_lt: String
  enterprise_exists: Boolean
  person_gte: ObjectId
  AND: [WorkspaceQueryInput!]
  name_ne: String
  person_nin: [ObjectId]
  key_lte: String
  _id_gt: ObjectId
  key: String
  vatId_exists: Boolean
  place: PlaceQueryInput
  address_exists: Boolean
  name_gte: String
  type_lt: String
  key_ne: String
  person_in: [ObjectId]
  type_nin: [String]
  person: ObjectId
  type_ne: String
  type_gte: String
  marketplace: WorkspaceMarketplaceQueryInput
  type_in: [String]
  type_lte: String
  name_nin: [String]
  vatId: String
  taxId_lte: String
  geo: GeometryQueryInput
  taxId_exists: Boolean
  _id_exists: Boolean
  enterprise: WorkspaceEnterpriseQueryInput
  _id_nin: [ObjectId]
}

enum TransactionChannelSortByInput {
  RESOURCE_ASC
  RESOURCE_DESC
  ROLE_ASC
  ROLE_DESC
  _ID_ASC
  _ID_DESC
  DIRECTION_ASC
  DIRECTION_DESC
}

input ShipmentQueryInput {
  createdAt_gt: DateTime
  order_exists: Boolean
  date_gte: DateTime
  date_exists: Boolean
  lines: [ShipmentLineQueryInput]
  delivery: ShipmentDeliveryQueryInput
  createdAt_in: [DateTime]
  createdAt_ne: DateTime
  date_gt: DateTime
  _id_in: [ObjectId]
  key_ne: String
  weight: QuantityQueryInput
  order: OrderQueryInput
  createdAt_gte: DateTime
  createdAt_nin: [DateTime]
  createdAt_lte: DateTime
  createdAt_exists: Boolean
  _id_gt: ObjectId
  lines_in: [ShipmentLineQueryInput]
  weight_exists: Boolean
  createdAt_lt: DateTime
  OR: [ShipmentQueryInput!]
  date: DateTime
  lines_exists: Boolean
  key_nin: [String]
  _id: ObjectId
  _id_gte: ObjectId
  _id_nin: [ObjectId]
  _id_exists: Boolean
  method_exists: Boolean
  key_lt: String
  carrier: ActorRefQueryInput
  lines_nin: [ShipmentLineQueryInput]
  pickup: ShipmentPickupQueryInput
  key_exists: Boolean
  key_gte: String
  pickup_exists: Boolean
  _id_ne: ObjectId
  key_in: [String]
  carrier_exists: Boolean
  _id_lt: ObjectId
  delivery_exists: Boolean
  date_in: [DateTime]
  date_lte: DateTime
  key_lte: String
  key: String
  _id_lte: ObjectId
  date_nin: [DateTime]
  method: ShippingMethodQueryInput
  date_ne: DateTime
  AND: [ShipmentQueryInput!]
  date_lt: DateTime
  createdAt: DateTime
  key_gt: String
}

type ProductBrand {
  name: String
}

input VehicleFeatureInsertInput {
  key: String
  name: String
}

input VehicleCostDriverUpdateInput {
  factor: Float
  factor_inc: Float
  factor_unset: Boolean
  type: String
  type_unset: Boolean
  unit: UnitRefUpdateInput
  unit_unset: Boolean
}

input TransactionChannelExternalTargetPlatformInsertInput {
  key: String
}

input CustomerPlacesRelationInput {
  link: [ObjectId]
  create: [PlaceInsertInput]
}

input SalesSessionUpdateInput {
  createdAt: DateTime
  ids_unset: Boolean
  owner: ActorRefUpdateInput
  _id_unset: Boolean
  updatedAt: DateTime
  _id: ObjectId
  ids: [String]
  createdAt_unset: Boolean
  owner_unset: Boolean
  updatedAt_unset: Boolean
}

input TourInsertInput {
  vehicle: TourVehicleRelationInput
  owner: ActorRefInsertInput
  duration: QuantityInsertInput
  shipments: TourShipmentsRelationInput
  createdAt: DateTime
  distance: QuantityInsertInput
  legs: [TourLegInsertInput]
  stops: [TourStopInsertInput]
  date: DateTime
  name: String
  _id: ObjectId
}

input ShipmentDeliveryUpdateInput {
  country: String
  phone: String
  postalCode: String
  phone_unset: Boolean
  street_unset: Boolean
  locality: String
  street: String
  name_unset: Boolean
  place: ShipmentDeliveryPlaceRelationInput
  locality_unset: Boolean
  postalCode_unset: Boolean
  country_unset: Boolean
  place_unset: Boolean
  name: String
}

input OrderLineInsertInput {
  offer: OrderLineOfferInsertInput
  gtin: String
  item: OrderLineItemInsertInput
  price: PriceInsertInput
  product1: ObjectId
  sku: String
  name: String
  product: OrderLineProductInsertInput
  quantity: QuantityInsertInput
}

input TransactionChannelExternalTargetInsertInput {
  platform: TransactionChannelExternalTargetPlatformInsertInput
  enterprise: TransactionChannelExternalTargetEnterpriseInsertInput
  marketplace: TransactionChannelExternalTargetMarketplaceInsertInput
}

input ConsolidationStrategyProfileUnlessFilterUpdateInput {
  regex_unset: Boolean
  isRoot: Boolean
  isRoot_unset: Boolean
  regex: String
}

input OrderBrokerWorkspaceRelationInput {
  create: WorkspaceInsertInput
  link: ObjectId
}

input TourStopTaskInsertInput {
  shipments: [ObjectId]
  duration: TourStopTaskDurationInsertInput
  name: String
}

type ProductIngredientListIngredient {
  name: String
}

input CatalogQueryInput {
  _id_nin: [ObjectId]
  enterprise_gte: ObjectId
  _id_exists: Boolean
  enterprise_in: [ObjectId]
  locations_exists: Boolean
  _id_ne: ObjectId
  locations: [LocationQueryInput]
  enterprise: ObjectId
  _id_gt: ObjectId
  _id_in: [ObjectId]
  _id_lte: ObjectId
  enterprise_exists: Boolean
  enterprise_lt: ObjectId
  enterprise_lte: ObjectId
  OR: [CatalogQueryInput!]
  _id: ObjectId
  _id_gte: ObjectId
  owner: ActorRefQueryInput
  locations_nin: [LocationQueryInput]
  locations_in: [LocationQueryInput]
  enterprise_gt: ObjectId
  _id_lt: ObjectId
  enterprise_ne: ObjectId
  owner_exists: Boolean
  enterprise_nin: [ObjectId]
  AND: [CatalogQueryInput!]
}

input OrderSellerUpdateInput {
  name_unset: Boolean
  workspace: OrderSellerWorkspaceRelationInput
  workspace_unset: Boolean
  supplier: OrderSellerSupplierRelationInput
  supplier_unset: Boolean
  name: String
}

input ConsolidateInputDatumWorkspaceAddress {
  country: String
  locality: String
  postalCode: String
  street: String
}

input ConsolidateInputDatumPlaceAddress {
  locality: String
  postalCode: String
  street: String
  country: String
}

input ConsolidateInputDatumOrderBuyerWorkspace {
  ids: [String]
}

input ProductBrandQueryInput {
  AND: [ProductBrandQueryInput!]
  OR: [ProductBrandQueryInput!]
  name_lte: String
  name_exists: Boolean
  name_lt: String
  name: String
  name_nin: [String]
  name_ne: String
  name_gt: String
  name_in: [String]
  name_gte: String
}

type TourDraftOptimisation {
  status: String
}

input ProductImageInsertInput {
  url: String
}

input LocationQueryInput {
  _id_lt: ObjectId
  type_lt: String
  _id_nin: [ObjectId]
  place_exists: Boolean
  _id_ne: ObjectId
  _id_lte: ObjectId
  type: String
  _id: ObjectId
  type_exists: Boolean
  type_gte: String
  _id_gt: ObjectId
  type_ne: String
  _id_gte: ObjectId
  type_nin: [String]
  type_lte: String
  type_in: [String]
  _id_exists: Boolean
  type_gt: String
  AND: [LocationQueryInput!]
  _id_in: [ObjectId]
  place: PlaceQueryInput
  OR: [LocationQueryInput!]
}

enum WorkspaceSortByInput {
  KEY_DESC
  VATID_ASC
  TAXID_ASC
  _ID_DESC
  PLACE_ASC
  TAXID_DESC
  NAME_DESC
  PERSON_ASC
  PERSON_DESC
  PLACE_DESC
  TYPE_DESC
  KEY_ASC
  NAME_ASC
  VATID_DESC
  TYPE_ASC
  _ID_ASC
}

input WorkspacePlaceRelationInput {
  link: ObjectId
  create: PlaceInsertInput
}

input ShippingMethodInsertInput {
  name: String
  owner: ActorRefInsertInput
  pickup: ShippingMethodPickupInsertInput
  _id: ObjectId
  description: String
  type: String
  ids: [String]
}

input OrderBuyerCustomerRelationInput {
  create: CustomerInsertInput
  link: ObjectId
}

input ProductGroupQueryInput {
  _id: ObjectId
  _id_gte: ObjectId
  name_lt: String
  _id_exists: Boolean
  name_lte: String
  AND: [ProductGroupQueryInput!]
  _id_lt: ObjectId
  _id_lte: ObjectId
  name_nin: [String]
  _id_gt: ObjectId
  name: String
  name_gte: String
  name_in: [String]
  _id_in: [ObjectId]
  _id_ne: ObjectId
  _id_nin: [ObjectId]
  name_exists: Boolean
  OR: [ProductGroupQueryInput!]
  name_ne: String
  name_gt: String
}

input TourStopDeliveryQueryInput {
  shipments_nin: [ObjectId]
  shipments_exists: Boolean
  AND: [TourStopDeliveryQueryInput!]
  OR: [TourStopDeliveryQueryInput!]
  shipments: [ObjectId]
  shipments_in: [ObjectId]
}

input ProductQuantityUnitInsertInput {
  text: String
}

input VehicleBrandUpdateInput {
  name: String
  name_unset: Boolean
}

input VehicleBrandQueryInput {
  name_ne: String
  OR: [VehicleBrandQueryInput!]
  name_gte: String
  name_lt: String
  AND: [VehicleBrandQueryInput!]
  name: String
  name_lte: String
  name_nin: [String]
  name_in: [String]
  name_exists: Boolean
  name_gt: String
}

input LocationUpdateInput {
  _id: ObjectId
  _id_unset: Boolean
  place: LocationPlaceRelationInput
  place_unset: Boolean
  type: String
  type_unset: Boolean
}

input TransactionChannelInternalTargetWorkspaceRelationInput {
  create: WorkspaceInsertInput
  link: ObjectId
}

input CatalogItemInsertInput {
  catalog: CatalogItemCatalogRelationInput
  createdAt: DateTime
  name: String
  categories: [ObjectId]
  _id: ObjectId
  ids: [String]
  inventoryItems: CatalogItemInventoryItemsRelationInput
  offers: CatalogItemOffersRelationInput
  owner: ActorRefInsertInput
  product: CatalogItemProductRelationInput
  sku: String
}

input TransactionChannelInternalTargetInsertInput {
  workspace: TransactionChannelInternalTargetWorkspaceRelationInput
}

input ShippingMethodPickupPointUpdateInput {
  place: ObjectId
  place_unset: Boolean
}

input ConsolidateInputDatumCodeList {
  ids: [String]
}

input TourDraftValidationQueryInput {
  OR: [TourDraftValidationQueryInput!]
  status_ne: String
  status_gte: String
  AND: [TourDraftValidationQueryInput!]
  status: String
  status_lte: String
  status_nin: [String]
  status_gt: String
  status_in: [String]
  status_exists: Boolean
  status_lt: String
}

type Area {
  _id: ObjectId
  code: String
  name: String
  types: [String]
  withinAreas: [ObjectId]
}

input WorkspaceMarketplaceInsertInput {
  key: String
}

input ConsolidateInputDatumCatalogItemOffer {
  ids: [String]
}

input ConsolidateInputDatumCustomerOwnerWorkspace {
  ids: [String]
}

input ConsolidateInputDatumOrderLine {
  product: ConsolidateInputDatumOrderLineProduct
  offer: ConsolidateInputDatumOrderLineOffer
  quantity: ConsolidateInputDatumOrderLineQuantity
  item: ConsolidateInputDatumOrderLineItem
  name: String
}

input VehicleModelInsertInput {
  date: DateTime
  name: String
}

input ProductClassificationInsertInput {
  name: String
  _id: ObjectId
  key: String
}

input OrderLineProductInsertInput {
  _id: ObjectId
}

input TourStopDeliveryUpdateInput {
  shipments_unset: Boolean
  shipments: [ObjectId]
}

input ConsolidateInputDatumProductGroupProducerWorkspace {
  ids: [String]
}

type TransactionChannelExternalTargetPlatform {
  key: String
}

input CodeTranslationNlInsertInput {
  name: String
}

type TourDraftValidation {
  status: String
}

input ProductImageUpdateInput {
  url_unset: Boolean
  url: String
}

input ConsolidateInputDatumProductGrossWeight {
  unit: ConsolidateInputDatumProductGrossWeightUnit
  value: Float
}

type VehicleCostResourceCurrency {
  symbol: String
}

input ConsolidationStrategyUpdateInput {
  key_unset: Boolean
  profiles: [ConsolidationStrategyProfileUpdateInput]
  profiles_unset: Boolean
  rules: [ConsolidationStrategyRuleUpdateInput]
  rules_unset: Boolean
  _id: ObjectId
  _id_unset: Boolean
  key: String
}

input ConsolidateInputDatumProductClassificationOwnerWorkspace {
  ids: [String]
}

input ConsolidateInputDatumOrderBroker {
  workspace: ConsolidateInputDatumOrderBrokerWorkspace
}

type TourStopPickup {
  shipments: [ObjectId]
}

input CodeListInsertInput {
  ids: [String]
  items: CodeListItemsRelationInput
  key: String
  name: String
  _id: ObjectId
}

input CatalogItemOffersRelationInput {
  link: [ObjectId]
  create: [OfferInsertInput]
}

type ConsolidationStrategyProfile {
  action: String
  key: String
  unless: [ConsolidationStrategyProfileUnless]
}

enum CatalogItemSortByInput {
  CREATEDAT_DESC
  NAME_ASC
  SKU_DESC
  CATALOG_ASC
  CATALOG_DESC
  CREATEDAT_ASC
  NAME_DESC
  PRODUCT_ASC
  PRODUCT_DESC
  SKU_ASC
  _ID_ASC
  _ID_DESC
}

enum VehicleSortByInput {
  TYPE_DESC
  _ID_ASC
  _ID_DESC
  NAME_ASC
  NAME_DESC
  TYPE_ASC
}

input VehicleCostResourceCurrencyQueryInput {
  symbol_gte: String
  symbol_lte: String
  symbol_in: [String]
  symbol: String
  OR: [VehicleCostResourceCurrencyQueryInput!]
  symbol_ne: String
  symbol_nin: [String]
  symbol_exists: Boolean
  AND: [VehicleCostResourceCurrencyQueryInput!]
  symbol_gt: String
  symbol_lt: String
}

type ShipmentPickup {
  place: Place
}

input ConsolidationStrategyProfileUnlessFilterQueryInput {
  isRoot_ne: Boolean
  regex_ne: String
  AND: [ConsolidationStrategyProfileUnlessFilterQueryInput!]
  regex_in: [String]
  regex_nin: [String]
  regex_gte: String
  regex_exists: Boolean
  OR: [ConsolidationStrategyProfileUnlessFilterQueryInput!]
  isRoot_exists: Boolean
  regex_lte: String
  regex: String
  regex_lt: String
  regex_gt: String
  isRoot: Boolean
}

input CatalogItemInventoryItemsRelationInput {
  create: [InventoryItemInsertInput]
  link: [ObjectId]
}

input ConsolidationStrategyProfileUnlessInsertInput {
  action: String
  filter: ConsolidationStrategyProfileUnlessFilterInsertInput
}

input ProductImageQueryInput {
  url_lt: String
  url_in: [String]
  AND: [ProductImageQueryInput!]
  url_nin: [String]
  url_gt: String
  OR: [ProductImageQueryInput!]
  url: String
  url_ne: String
  url_exists: Boolean
  url_gte: String
  url_lte: String
}

type Code {
  _id: ObjectId
  ids: [String]
  key: String
  list: CodeList
  listKey: String
  name: String
  sequence: String
  symbol: String
  translations: CodeTranslation
}

input ShippingMethodPickupQueryInput {
  OR: [ShippingMethodPickupQueryInput!]
  points: [ShippingMethodPickupPointQueryInput]
  points_exists: Boolean
  points_in: [ShippingMethodPickupPointQueryInput]
  points_nin: [ShippingMethodPickupPointQueryInput]
  AND: [ShippingMethodPickupQueryInput!]
}

input VehicleCostQueryInput {
  driver: VehicleCostDriverQueryInput
  value_nin: [Float]
  driver_exists: Boolean
  value_exists: Boolean
  value_lt: Float
  AND: [VehicleCostQueryInput!]
  OR: [VehicleCostQueryInput!]
  value: Float
  resource: VehicleCostResourceQueryInput
  unit_exists: Boolean
  value_ne: Float
  value_gte: Float
  resource_exists: Boolean
  unit: UnitRefQueryInput
  value_in: [Float]
  value_lte: Float
  value_gt: Float
}

type SalesSession {
  _id: ObjectId
  createdAt: DateTime
  ids: [String]
  owner: ActorRef
  updatedAt: DateTime
}

input ConsolidateInputDatumOffer {
  ids: [String]
  price: ConsolidateInputDatumOfferPrice
  product: ConsolidateInputDatumOfferProduct
  owner: ConsolidateInputDatumOfferOwner
}

input ActorRefQueryInput {
  workspace_exists: Boolean
  AND: [ActorRefQueryInput!]
  OR: [ActorRefQueryInput!]
  workspace: WorkspaceQueryInput
}

type TransactionChannelFilter {
  isOrdered: Boolean
  status: String
}

type ActorRef {
  workspace: Workspace
}

type TransactionChannelExternalTarget {
  enterprise: TransactionChannelExternalTargetEnterprise
  marketplace: TransactionChannelExternalTargetMarketplace
  platform: TransactionChannelExternalTargetPlatform
}

input VehicleCompartmentInsertInput {
  capacity: StorageCapacityInsertInput
  features: [VehicleCompartmentFeatureInsertInput]
  name: String
}

enum TourSortByInput {
  NAME_DESC
  VEHICLE_ASC
  VEHICLE_DESC
  _ID_DESC
  DATE_ASC
  CREATEDAT_ASC
  CREATEDAT_DESC
  _ID_ASC
  DATE_DESC
  NAME_ASC
}
